/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject67 struct for InlineObject67
type InlineObject67 struct {
	//
	Email *string `json:"email,omitempty"`
	//
	FirstName *string `json:"first_name,omitempty"`
	// Designates that this user has all permissions without explicitly assigning them.
	IsSuperuser *bool `json:"is_superuser,omitempty"`
	//
	IsSystemAuditor *bool `json:"is_system_auditor,omitempty"`
	//
	LastName *string `json:"last_name,omitempty"`
	// Write-only field used to change the password.
	Password *string `json:"password,omitempty"`
	// Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
	Username string `json:"username"`
}

// NewInlineObject67 instantiates a new InlineObject67 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject67(username string) *InlineObject67 {
	this := InlineObject67{}
	this.Username = username
	return &this
}

// NewInlineObject67WithDefaults instantiates a new InlineObject67 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject67WithDefaults() *InlineObject67 {
	this := InlineObject67{}
	return &this
}

// GetEmail returns the Email field value if set, zero value otherwise.
func (o *InlineObject67) GetEmail() string {
	if o == nil || o.Email == nil {
		var ret string
		return ret
	}
	return *o.Email
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetEmailOk() (*string, bool) {
	if o == nil || o.Email == nil {
		return nil, false
	}
	return o.Email, true
}

// HasEmail returns a boolean if a field has been set.
func (o *InlineObject67) HasEmail() bool {
	if o != nil && o.Email != nil {
		return true
	}

	return false
}

// SetEmail gets a reference to the given string and assigns it to the Email field.
func (o *InlineObject67) SetEmail(v string) {
	o.Email = &v
}

// GetFirstName returns the FirstName field value if set, zero value otherwise.
func (o *InlineObject67) GetFirstName() string {
	if o == nil || o.FirstName == nil {
		var ret string
		return ret
	}
	return *o.FirstName
}

// GetFirstNameOk returns a tuple with the FirstName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetFirstNameOk() (*string, bool) {
	if o == nil || o.FirstName == nil {
		return nil, false
	}
	return o.FirstName, true
}

// HasFirstName returns a boolean if a field has been set.
func (o *InlineObject67) HasFirstName() bool {
	if o != nil && o.FirstName != nil {
		return true
	}

	return false
}

// SetFirstName gets a reference to the given string and assigns it to the FirstName field.
func (o *InlineObject67) SetFirstName(v string) {
	o.FirstName = &v
}

// GetIsSuperuser returns the IsSuperuser field value if set, zero value otherwise.
func (o *InlineObject67) GetIsSuperuser() bool {
	if o == nil || o.IsSuperuser == nil {
		var ret bool
		return ret
	}
	return *o.IsSuperuser
}

// GetIsSuperuserOk returns a tuple with the IsSuperuser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetIsSuperuserOk() (*bool, bool) {
	if o == nil || o.IsSuperuser == nil {
		return nil, false
	}
	return o.IsSuperuser, true
}

// HasIsSuperuser returns a boolean if a field has been set.
func (o *InlineObject67) HasIsSuperuser() bool {
	if o != nil && o.IsSuperuser != nil {
		return true
	}

	return false
}

// SetIsSuperuser gets a reference to the given bool and assigns it to the IsSuperuser field.
func (o *InlineObject67) SetIsSuperuser(v bool) {
	o.IsSuperuser = &v
}

// GetIsSystemAuditor returns the IsSystemAuditor field value if set, zero value otherwise.
func (o *InlineObject67) GetIsSystemAuditor() bool {
	if o == nil || o.IsSystemAuditor == nil {
		var ret bool
		return ret
	}
	return *o.IsSystemAuditor
}

// GetIsSystemAuditorOk returns a tuple with the IsSystemAuditor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetIsSystemAuditorOk() (*bool, bool) {
	if o == nil || o.IsSystemAuditor == nil {
		return nil, false
	}
	return o.IsSystemAuditor, true
}

// HasIsSystemAuditor returns a boolean if a field has been set.
func (o *InlineObject67) HasIsSystemAuditor() bool {
	if o != nil && o.IsSystemAuditor != nil {
		return true
	}

	return false
}

// SetIsSystemAuditor gets a reference to the given bool and assigns it to the IsSystemAuditor field.
func (o *InlineObject67) SetIsSystemAuditor(v bool) {
	o.IsSystemAuditor = &v
}

// GetLastName returns the LastName field value if set, zero value otherwise.
func (o *InlineObject67) GetLastName() string {
	if o == nil || o.LastName == nil {
		var ret string
		return ret
	}
	return *o.LastName
}

// GetLastNameOk returns a tuple with the LastName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetLastNameOk() (*string, bool) {
	if o == nil || o.LastName == nil {
		return nil, false
	}
	return o.LastName, true
}

// HasLastName returns a boolean if a field has been set.
func (o *InlineObject67) HasLastName() bool {
	if o != nil && o.LastName != nil {
		return true
	}

	return false
}

// SetLastName gets a reference to the given string and assigns it to the LastName field.
func (o *InlineObject67) SetLastName(v string) {
	o.LastName = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *InlineObject67) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *InlineObject67) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *InlineObject67) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value
func (o *InlineObject67) GetUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Username
}

// GetUsernameOk returns a tuple with the Username field value
// and a boolean to check if the value has been set.
func (o *InlineObject67) GetUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Username, true
}

// SetUsername sets field value
func (o *InlineObject67) SetUsername(v string) {
	o.Username = v
}

func (o InlineObject67) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Email != nil {
		toSerialize["email"] = o.Email
	}
	if o.FirstName != nil {
		toSerialize["first_name"] = o.FirstName
	}
	if o.IsSuperuser != nil {
		toSerialize["is_superuser"] = o.IsSuperuser
	}
	if o.IsSystemAuditor != nil {
		toSerialize["is_system_auditor"] = o.IsSystemAuditor
	}
	if o.LastName != nil {
		toSerialize["last_name"] = o.LastName
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if true {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject67 struct {
	value *InlineObject67
	isSet bool
}

func (v NullableInlineObject67) Get() *InlineObject67 {
	return v.value
}

func (v *NullableInlineObject67) Set(val *InlineObject67) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject67) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject67) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject67(val *InlineObject67) *NullableInlineObject67 {
	return &NullableInlineObject67{value: val, isSet: true}
}

func (v NullableInlineObject67) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject67) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
