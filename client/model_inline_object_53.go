/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject53 struct for InlineObject53
type InlineObject53 struct {
	// Allow changing the SCM branch or revision in a job template that uses this project.
	AllowOverride *bool `json:"allow_override,omitempty"`
	//
	Credential *int32 `json:"credential,omitempty"`
	// Local absolute file path containing a custom Python virtualenv to use
	CustomVirtualenv *string `json:"custom_virtualenv,omitempty"`
	//
	Description *string `json:"description,omitempty"`
	// Local path (relative to PROJECTS_ROOT) containing playbooks and related files for this project.
	LocalPath *string `json:"local_path,omitempty"`
	//
	Name string `json:"name"`
	// The organization used to determine access to this template.
	Organization *int32 `json:"organization,omitempty"`
	// Specific branch, tag or commit to checkout.
	ScmBranch *string `json:"scm_branch,omitempty"`
	// Discard any local changes before syncing the project.
	ScmClean *bool `json:"scm_clean,omitempty"`
	// Delete the project before syncing.
	ScmDeleteOnUpdate *bool `json:"scm_delete_on_update,omitempty"`
	// For git projects, an additional refspec to fetch.
	ScmRefspec *string `json:"scm_refspec,omitempty"`
	// Specifies the source control system used to store the project.
	ScmType *string `json:"scm_type,omitempty"`
	// The number of seconds after the last project update ran that a new project update will be launched as a job dependency.
	ScmUpdateCacheTimeout *int32 `json:"scm_update_cache_timeout,omitempty"`
	// Update the project when a job is launched that uses the project.
	ScmUpdateOnLaunch *bool `json:"scm_update_on_launch,omitempty"`
	// The location where the project is stored.
	ScmUrl *string `json:"scm_url,omitempty"`
	// The amount of time (in seconds) to run before the task is canceled.
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewInlineObject53 instantiates a new InlineObject53 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject53(name string) *InlineObject53 {
	this := InlineObject53{}
	this.Name = name
	return &this
}

// NewInlineObject53WithDefaults instantiates a new InlineObject53 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject53WithDefaults() *InlineObject53 {
	this := InlineObject53{}
	return &this
}

// GetAllowOverride returns the AllowOverride field value if set, zero value otherwise.
func (o *InlineObject53) GetAllowOverride() bool {
	if o == nil || o.AllowOverride == nil {
		var ret bool
		return ret
	}
	return *o.AllowOverride
}

// GetAllowOverrideOk returns a tuple with the AllowOverride field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetAllowOverrideOk() (*bool, bool) {
	if o == nil || o.AllowOverride == nil {
		return nil, false
	}
	return o.AllowOverride, true
}

// HasAllowOverride returns a boolean if a field has been set.
func (o *InlineObject53) HasAllowOverride() bool {
	if o != nil && o.AllowOverride != nil {
		return true
	}

	return false
}

// SetAllowOverride gets a reference to the given bool and assigns it to the AllowOverride field.
func (o *InlineObject53) SetAllowOverride(v bool) {
	o.AllowOverride = &v
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *InlineObject53) GetCredential() int32 {
	if o == nil || o.Credential == nil {
		var ret int32
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetCredentialOk() (*int32, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *InlineObject53) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given int32 and assigns it to the Credential field.
func (o *InlineObject53) SetCredential(v int32) {
	o.Credential = &v
}

// GetCustomVirtualenv returns the CustomVirtualenv field value if set, zero value otherwise.
func (o *InlineObject53) GetCustomVirtualenv() string {
	if o == nil || o.CustomVirtualenv == nil {
		var ret string
		return ret
	}
	return *o.CustomVirtualenv
}

// GetCustomVirtualenvOk returns a tuple with the CustomVirtualenv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetCustomVirtualenvOk() (*string, bool) {
	if o == nil || o.CustomVirtualenv == nil {
		return nil, false
	}
	return o.CustomVirtualenv, true
}

// HasCustomVirtualenv returns a boolean if a field has been set.
func (o *InlineObject53) HasCustomVirtualenv() bool {
	if o != nil && o.CustomVirtualenv != nil {
		return true
	}

	return false
}

// SetCustomVirtualenv gets a reference to the given string and assigns it to the CustomVirtualenv field.
func (o *InlineObject53) SetCustomVirtualenv(v string) {
	o.CustomVirtualenv = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject53) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject53) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject53) SetDescription(v string) {
	o.Description = &v
}

// GetLocalPath returns the LocalPath field value if set, zero value otherwise.
func (o *InlineObject53) GetLocalPath() string {
	if o == nil || o.LocalPath == nil {
		var ret string
		return ret
	}
	return *o.LocalPath
}

// GetLocalPathOk returns a tuple with the LocalPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetLocalPathOk() (*string, bool) {
	if o == nil || o.LocalPath == nil {
		return nil, false
	}
	return o.LocalPath, true
}

// HasLocalPath returns a boolean if a field has been set.
func (o *InlineObject53) HasLocalPath() bool {
	if o != nil && o.LocalPath != nil {
		return true
	}

	return false
}

// SetLocalPath gets a reference to the given string and assigns it to the LocalPath field.
func (o *InlineObject53) SetLocalPath(v string) {
	o.LocalPath = &v
}

// GetName returns the Name field value
func (o *InlineObject53) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject53) SetName(v string) {
	o.Name = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *InlineObject53) GetOrganization() int32 {
	if o == nil || o.Organization == nil {
		var ret int32
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetOrganizationOk() (*int32, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *InlineObject53) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given int32 and assigns it to the Organization field.
func (o *InlineObject53) SetOrganization(v int32) {
	o.Organization = &v
}

// GetScmBranch returns the ScmBranch field value if set, zero value otherwise.
func (o *InlineObject53) GetScmBranch() string {
	if o == nil || o.ScmBranch == nil {
		var ret string
		return ret
	}
	return *o.ScmBranch
}

// GetScmBranchOk returns a tuple with the ScmBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmBranchOk() (*string, bool) {
	if o == nil || o.ScmBranch == nil {
		return nil, false
	}
	return o.ScmBranch, true
}

// HasScmBranch returns a boolean if a field has been set.
func (o *InlineObject53) HasScmBranch() bool {
	if o != nil && o.ScmBranch != nil {
		return true
	}

	return false
}

// SetScmBranch gets a reference to the given string and assigns it to the ScmBranch field.
func (o *InlineObject53) SetScmBranch(v string) {
	o.ScmBranch = &v
}

// GetScmClean returns the ScmClean field value if set, zero value otherwise.
func (o *InlineObject53) GetScmClean() bool {
	if o == nil || o.ScmClean == nil {
		var ret bool
		return ret
	}
	return *o.ScmClean
}

// GetScmCleanOk returns a tuple with the ScmClean field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmCleanOk() (*bool, bool) {
	if o == nil || o.ScmClean == nil {
		return nil, false
	}
	return o.ScmClean, true
}

// HasScmClean returns a boolean if a field has been set.
func (o *InlineObject53) HasScmClean() bool {
	if o != nil && o.ScmClean != nil {
		return true
	}

	return false
}

// SetScmClean gets a reference to the given bool and assigns it to the ScmClean field.
func (o *InlineObject53) SetScmClean(v bool) {
	o.ScmClean = &v
}

// GetScmDeleteOnUpdate returns the ScmDeleteOnUpdate field value if set, zero value otherwise.
func (o *InlineObject53) GetScmDeleteOnUpdate() bool {
	if o == nil || o.ScmDeleteOnUpdate == nil {
		var ret bool
		return ret
	}
	return *o.ScmDeleteOnUpdate
}

// GetScmDeleteOnUpdateOk returns a tuple with the ScmDeleteOnUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmDeleteOnUpdateOk() (*bool, bool) {
	if o == nil || o.ScmDeleteOnUpdate == nil {
		return nil, false
	}
	return o.ScmDeleteOnUpdate, true
}

// HasScmDeleteOnUpdate returns a boolean if a field has been set.
func (o *InlineObject53) HasScmDeleteOnUpdate() bool {
	if o != nil && o.ScmDeleteOnUpdate != nil {
		return true
	}

	return false
}

// SetScmDeleteOnUpdate gets a reference to the given bool and assigns it to the ScmDeleteOnUpdate field.
func (o *InlineObject53) SetScmDeleteOnUpdate(v bool) {
	o.ScmDeleteOnUpdate = &v
}

// GetScmRefspec returns the ScmRefspec field value if set, zero value otherwise.
func (o *InlineObject53) GetScmRefspec() string {
	if o == nil || o.ScmRefspec == nil {
		var ret string
		return ret
	}
	return *o.ScmRefspec
}

// GetScmRefspecOk returns a tuple with the ScmRefspec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmRefspecOk() (*string, bool) {
	if o == nil || o.ScmRefspec == nil {
		return nil, false
	}
	return o.ScmRefspec, true
}

// HasScmRefspec returns a boolean if a field has been set.
func (o *InlineObject53) HasScmRefspec() bool {
	if o != nil && o.ScmRefspec != nil {
		return true
	}

	return false
}

// SetScmRefspec gets a reference to the given string and assigns it to the ScmRefspec field.
func (o *InlineObject53) SetScmRefspec(v string) {
	o.ScmRefspec = &v
}

// GetScmType returns the ScmType field value if set, zero value otherwise.
func (o *InlineObject53) GetScmType() string {
	if o == nil || o.ScmType == nil {
		var ret string
		return ret
	}
	return *o.ScmType
}

// GetScmTypeOk returns a tuple with the ScmType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmTypeOk() (*string, bool) {
	if o == nil || o.ScmType == nil {
		return nil, false
	}
	return o.ScmType, true
}

// HasScmType returns a boolean if a field has been set.
func (o *InlineObject53) HasScmType() bool {
	if o != nil && o.ScmType != nil {
		return true
	}

	return false
}

// SetScmType gets a reference to the given string and assigns it to the ScmType field.
func (o *InlineObject53) SetScmType(v string) {
	o.ScmType = &v
}

// GetScmUpdateCacheTimeout returns the ScmUpdateCacheTimeout field value if set, zero value otherwise.
func (o *InlineObject53) GetScmUpdateCacheTimeout() int32 {
	if o == nil || o.ScmUpdateCacheTimeout == nil {
		var ret int32
		return ret
	}
	return *o.ScmUpdateCacheTimeout
}

// GetScmUpdateCacheTimeoutOk returns a tuple with the ScmUpdateCacheTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmUpdateCacheTimeoutOk() (*int32, bool) {
	if o == nil || o.ScmUpdateCacheTimeout == nil {
		return nil, false
	}
	return o.ScmUpdateCacheTimeout, true
}

// HasScmUpdateCacheTimeout returns a boolean if a field has been set.
func (o *InlineObject53) HasScmUpdateCacheTimeout() bool {
	if o != nil && o.ScmUpdateCacheTimeout != nil {
		return true
	}

	return false
}

// SetScmUpdateCacheTimeout gets a reference to the given int32 and assigns it to the ScmUpdateCacheTimeout field.
func (o *InlineObject53) SetScmUpdateCacheTimeout(v int32) {
	o.ScmUpdateCacheTimeout = &v
}

// GetScmUpdateOnLaunch returns the ScmUpdateOnLaunch field value if set, zero value otherwise.
func (o *InlineObject53) GetScmUpdateOnLaunch() bool {
	if o == nil || o.ScmUpdateOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.ScmUpdateOnLaunch
}

// GetScmUpdateOnLaunchOk returns a tuple with the ScmUpdateOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmUpdateOnLaunchOk() (*bool, bool) {
	if o == nil || o.ScmUpdateOnLaunch == nil {
		return nil, false
	}
	return o.ScmUpdateOnLaunch, true
}

// HasScmUpdateOnLaunch returns a boolean if a field has been set.
func (o *InlineObject53) HasScmUpdateOnLaunch() bool {
	if o != nil && o.ScmUpdateOnLaunch != nil {
		return true
	}

	return false
}

// SetScmUpdateOnLaunch gets a reference to the given bool and assigns it to the ScmUpdateOnLaunch field.
func (o *InlineObject53) SetScmUpdateOnLaunch(v bool) {
	o.ScmUpdateOnLaunch = &v
}

// GetScmUrl returns the ScmUrl field value if set, zero value otherwise.
func (o *InlineObject53) GetScmUrl() string {
	if o == nil || o.ScmUrl == nil {
		var ret string
		return ret
	}
	return *o.ScmUrl
}

// GetScmUrlOk returns a tuple with the ScmUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetScmUrlOk() (*string, bool) {
	if o == nil || o.ScmUrl == nil {
		return nil, false
	}
	return o.ScmUrl, true
}

// HasScmUrl returns a boolean if a field has been set.
func (o *InlineObject53) HasScmUrl() bool {
	if o != nil && o.ScmUrl != nil {
		return true
	}

	return false
}

// SetScmUrl gets a reference to the given string and assigns it to the ScmUrl field.
func (o *InlineObject53) SetScmUrl(v string) {
	o.ScmUrl = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineObject53) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject53) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineObject53) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineObject53) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o InlineObject53) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowOverride != nil {
		toSerialize["allow_override"] = o.AllowOverride
	}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.CustomVirtualenv != nil {
		toSerialize["custom_virtualenv"] = o.CustomVirtualenv
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.LocalPath != nil {
		toSerialize["local_path"] = o.LocalPath
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.ScmBranch != nil {
		toSerialize["scm_branch"] = o.ScmBranch
	}
	if o.ScmClean != nil {
		toSerialize["scm_clean"] = o.ScmClean
	}
	if o.ScmDeleteOnUpdate != nil {
		toSerialize["scm_delete_on_update"] = o.ScmDeleteOnUpdate
	}
	if o.ScmRefspec != nil {
		toSerialize["scm_refspec"] = o.ScmRefspec
	}
	if o.ScmType != nil {
		toSerialize["scm_type"] = o.ScmType
	}
	if o.ScmUpdateCacheTimeout != nil {
		toSerialize["scm_update_cache_timeout"] = o.ScmUpdateCacheTimeout
	}
	if o.ScmUpdateOnLaunch != nil {
		toSerialize["scm_update_on_launch"] = o.ScmUpdateOnLaunch
	}
	if o.ScmUrl != nil {
		toSerialize["scm_url"] = o.ScmUrl
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject53 struct {
	value *InlineObject53
	isSet bool
}

func (v NullableInlineObject53) Get() *InlineObject53 {
	return v.value
}

func (v *NullableInlineObject53) Set(val *InlineObject53) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject53) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject53) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject53(val *InlineObject53) *NullableInlineObject53 {
	return &NullableInlineObject53{value: val, isSet: true}
}

func (v NullableInlineObject53) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject53) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
