/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject84 struct for InlineObject84
type InlineObject84 struct {
	//
	Description *string `json:"description,omitempty"`
	// Optional custom messages for notification template.
	Messages *string `json:"messages,omitempty"`
	//
	Name string `json:"name"`
	//
	NotificationConfiguration *string `json:"notification_configuration,omitempty"`
	//
	NotificationType string `json:"notification_type"`
	//
	Organization int32 `json:"organization"`
}

// NewInlineObject84 instantiates a new InlineObject84 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject84(name string, notificationType string, organization int32) *InlineObject84 {
	this := InlineObject84{}
	this.Name = name
	this.NotificationType = notificationType
	this.Organization = organization
	return &this
}

// NewInlineObject84WithDefaults instantiates a new InlineObject84 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject84WithDefaults() *InlineObject84 {
	this := InlineObject84{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject84) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject84) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject84) SetDescription(v string) {
	o.Description = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *InlineObject84) GetMessages() string {
	if o == nil || o.Messages == nil {
		var ret string
		return ret
	}
	return *o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetMessagesOk() (*string, bool) {
	if o == nil || o.Messages == nil {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *InlineObject84) HasMessages() bool {
	if o != nil && o.Messages != nil {
		return true
	}

	return false
}

// SetMessages gets a reference to the given string and assigns it to the Messages field.
func (o *InlineObject84) SetMessages(v string) {
	o.Messages = &v
}

// GetName returns the Name field value
func (o *InlineObject84) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject84) SetName(v string) {
	o.Name = v
}

// GetNotificationConfiguration returns the NotificationConfiguration field value if set, zero value otherwise.
func (o *InlineObject84) GetNotificationConfiguration() string {
	if o == nil || o.NotificationConfiguration == nil {
		var ret string
		return ret
	}
	return *o.NotificationConfiguration
}

// GetNotificationConfigurationOk returns a tuple with the NotificationConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetNotificationConfigurationOk() (*string, bool) {
	if o == nil || o.NotificationConfiguration == nil {
		return nil, false
	}
	return o.NotificationConfiguration, true
}

// HasNotificationConfiguration returns a boolean if a field has been set.
func (o *InlineObject84) HasNotificationConfiguration() bool {
	if o != nil && o.NotificationConfiguration != nil {
		return true
	}

	return false
}

// SetNotificationConfiguration gets a reference to the given string and assigns it to the NotificationConfiguration field.
func (o *InlineObject84) SetNotificationConfiguration(v string) {
	o.NotificationConfiguration = &v
}

// GetNotificationType returns the NotificationType field value
func (o *InlineObject84) GetNotificationType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NotificationType
}

// GetNotificationTypeOk returns a tuple with the NotificationType field value
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetNotificationTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NotificationType, true
}

// SetNotificationType sets field value
func (o *InlineObject84) SetNotificationType(v string) {
	o.NotificationType = v
}

// GetOrganization returns the Organization field value
func (o *InlineObject84) GetOrganization() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value
// and a boolean to check if the value has been set.
func (o *InlineObject84) GetOrganizationOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Organization, true
}

// SetOrganization sets field value
func (o *InlineObject84) SetOrganization(v int32) {
	o.Organization = v
}

func (o InlineObject84) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Messages != nil {
		toSerialize["messages"] = o.Messages
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.NotificationConfiguration != nil {
		toSerialize["notification_configuration"] = o.NotificationConfiguration
	}
	if true {
		toSerialize["notification_type"] = o.NotificationType
	}
	if true {
		toSerialize["organization"] = o.Organization
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject84 struct {
	value *InlineObject84
	isSet bool
}

func (v NullableInlineObject84) Get() *InlineObject84 {
	return v.value
}

func (v *NullableInlineObject84) Set(val *InlineObject84) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject84) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject84) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject84(val *InlineObject84) *NullableInlineObject84 {
	return &NullableInlineObject84{value: val, isSet: true}
}

func (v NullableInlineObject84) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject84) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
