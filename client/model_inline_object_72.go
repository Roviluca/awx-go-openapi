/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject72 struct for InlineObject72
type InlineObject72 struct {
	//
	Description *string `json:"description,omitempty"`
	//
	Name string `json:"name"`
	// The amount of time (in seconds) before the approval node expires and fails.
	Timeout *int32 `json:"timeout,omitempty"`
}

// NewInlineObject72 instantiates a new InlineObject72 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject72(name string) *InlineObject72 {
	this := InlineObject72{}
	this.Name = name
	return &this
}

// NewInlineObject72WithDefaults instantiates a new InlineObject72 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject72WithDefaults() *InlineObject72 {
	this := InlineObject72{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject72) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject72) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject72) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject72) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *InlineObject72) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject72) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject72) SetName(v string) {
	o.Name = v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineObject72) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject72) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineObject72) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineObject72) SetTimeout(v int32) {
	o.Timeout = &v
}

func (o InlineObject72) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject72 struct {
	value *InlineObject72
	isSet bool
}

func (v NullableInlineObject72) Get() *InlineObject72 {
	return v.value
}

func (v *NullableInlineObject72) Set(val *InlineObject72) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject72) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject72) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject72(val *InlineObject72) *NullableInlineObject72 {
	return &NullableInlineObject72{value: val, isSet: true}
}

func (v NullableInlineObject72) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject72) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
