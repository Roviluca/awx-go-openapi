/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject27 struct for InlineObject27
type InlineObject27 struct {
	// Cloud credential to use for inventory updates.
	Credential *int32 `json:"credential,omitempty"`
	// Local absolute file path containing a custom Python virtualenv to use
	CustomVirtualenv *string `json:"custom_virtualenv,omitempty"`
	//
	Description *string `json:"description,omitempty"`
	// Only used when enabled_var is set. Value when the host is considered enabled. For example if enabled_var=\"status.power_state\"and enabled_value=\"powered_on\" with host variables:{   \"status\": {     \"power_state\": \"powered_on\",     \"created\": \"2018-02-01T08:00:00.000000Z:00\",     \"healthy\": true    },    \"name\": \"foobar\",    \"ip_address\": \"192.168.2.1\"}The host would be marked enabled. If power_state where any value other than powered_on then the host would be disabled when imported into Tower. If the key is not found then the host will be enabled
	EnabledValue *string `json:"enabled_value,omitempty"`
	// Retrieve the enabled state from the given dict of host variables. The enabled variable may be specified as \"foo.bar\", in which case the lookup will traverse into nested dicts, equivalent to: from_dict.get(\"foo\", {}).get(\"bar\", default)
	EnabledVar *string `json:"enabled_var,omitempty"`
	// Regex where only matching hosts will be imported into Tower.
	HostFilter *string `json:"host_filter,omitempty"`
	//
	Inventory int32 `json:"inventory"`
	//
	Name string `json:"name"`
	// Overwrite local groups and hosts from remote inventory source.
	Overwrite *bool `json:"overwrite,omitempty"`
	// Overwrite local variables from remote inventory source.
	OverwriteVars *bool `json:"overwrite_vars,omitempty"`
	//
	Source *string `json:"source,omitempty"`
	//
	SourcePath *string `json:"source_path,omitempty"`
	// Project containing inventory file used as source.
	SourceProject *string `json:"source_project,omitempty"`
	//
	SourceScript *int32 `json:"source_script,omitempty"`
	// Inventory source variables in YAML or JSON format.
	SourceVars *string `json:"source_vars,omitempty"`
	// The amount of time (in seconds) to run before the task is canceled.
	Timeout *int32 `json:"timeout,omitempty"`
	//
	UpdateCacheTimeout *int32 `json:"update_cache_timeout,omitempty"`
	//
	UpdateOnLaunch *bool `json:"update_on_launch,omitempty"`
	//
	UpdateOnProjectUpdate *bool `json:"update_on_project_update,omitempty"`
	//
	Verbosity *string `json:"verbosity,omitempty"`
}

// NewInlineObject27 instantiates a new InlineObject27 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject27(inventory int32, name string) *InlineObject27 {
	this := InlineObject27{}
	this.Inventory = inventory
	this.Name = name
	return &this
}

// NewInlineObject27WithDefaults instantiates a new InlineObject27 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject27WithDefaults() *InlineObject27 {
	this := InlineObject27{}
	return &this
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *InlineObject27) GetCredential() int32 {
	if o == nil || o.Credential == nil {
		var ret int32
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetCredentialOk() (*int32, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *InlineObject27) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given int32 and assigns it to the Credential field.
func (o *InlineObject27) SetCredential(v int32) {
	o.Credential = &v
}

// GetCustomVirtualenv returns the CustomVirtualenv field value if set, zero value otherwise.
func (o *InlineObject27) GetCustomVirtualenv() string {
	if o == nil || o.CustomVirtualenv == nil {
		var ret string
		return ret
	}
	return *o.CustomVirtualenv
}

// GetCustomVirtualenvOk returns a tuple with the CustomVirtualenv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetCustomVirtualenvOk() (*string, bool) {
	if o == nil || o.CustomVirtualenv == nil {
		return nil, false
	}
	return o.CustomVirtualenv, true
}

// HasCustomVirtualenv returns a boolean if a field has been set.
func (o *InlineObject27) HasCustomVirtualenv() bool {
	if o != nil && o.CustomVirtualenv != nil {
		return true
	}

	return false
}

// SetCustomVirtualenv gets a reference to the given string and assigns it to the CustomVirtualenv field.
func (o *InlineObject27) SetCustomVirtualenv(v string) {
	o.CustomVirtualenv = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject27) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject27) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject27) SetDescription(v string) {
	o.Description = &v
}

// GetEnabledValue returns the EnabledValue field value if set, zero value otherwise.
func (o *InlineObject27) GetEnabledValue() string {
	if o == nil || o.EnabledValue == nil {
		var ret string
		return ret
	}
	return *o.EnabledValue
}

// GetEnabledValueOk returns a tuple with the EnabledValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetEnabledValueOk() (*string, bool) {
	if o == nil || o.EnabledValue == nil {
		return nil, false
	}
	return o.EnabledValue, true
}

// HasEnabledValue returns a boolean if a field has been set.
func (o *InlineObject27) HasEnabledValue() bool {
	if o != nil && o.EnabledValue != nil {
		return true
	}

	return false
}

// SetEnabledValue gets a reference to the given string and assigns it to the EnabledValue field.
func (o *InlineObject27) SetEnabledValue(v string) {
	o.EnabledValue = &v
}

// GetEnabledVar returns the EnabledVar field value if set, zero value otherwise.
func (o *InlineObject27) GetEnabledVar() string {
	if o == nil || o.EnabledVar == nil {
		var ret string
		return ret
	}
	return *o.EnabledVar
}

// GetEnabledVarOk returns a tuple with the EnabledVar field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetEnabledVarOk() (*string, bool) {
	if o == nil || o.EnabledVar == nil {
		return nil, false
	}
	return o.EnabledVar, true
}

// HasEnabledVar returns a boolean if a field has been set.
func (o *InlineObject27) HasEnabledVar() bool {
	if o != nil && o.EnabledVar != nil {
		return true
	}

	return false
}

// SetEnabledVar gets a reference to the given string and assigns it to the EnabledVar field.
func (o *InlineObject27) SetEnabledVar(v string) {
	o.EnabledVar = &v
}

// GetHostFilter returns the HostFilter field value if set, zero value otherwise.
func (o *InlineObject27) GetHostFilter() string {
	if o == nil || o.HostFilter == nil {
		var ret string
		return ret
	}
	return *o.HostFilter
}

// GetHostFilterOk returns a tuple with the HostFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetHostFilterOk() (*string, bool) {
	if o == nil || o.HostFilter == nil {
		return nil, false
	}
	return o.HostFilter, true
}

// HasHostFilter returns a boolean if a field has been set.
func (o *InlineObject27) HasHostFilter() bool {
	if o != nil && o.HostFilter != nil {
		return true
	}

	return false
}

// SetHostFilter gets a reference to the given string and assigns it to the HostFilter field.
func (o *InlineObject27) SetHostFilter(v string) {
	o.HostFilter = &v
}

// GetInventory returns the Inventory field value
func (o *InlineObject27) GetInventory() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetInventoryOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inventory, true
}

// SetInventory sets field value
func (o *InlineObject27) SetInventory(v int32) {
	o.Inventory = v
}

// GetName returns the Name field value
func (o *InlineObject27) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject27) SetName(v string) {
	o.Name = v
}

// GetOverwrite returns the Overwrite field value if set, zero value otherwise.
func (o *InlineObject27) GetOverwrite() bool {
	if o == nil || o.Overwrite == nil {
		var ret bool
		return ret
	}
	return *o.Overwrite
}

// GetOverwriteOk returns a tuple with the Overwrite field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetOverwriteOk() (*bool, bool) {
	if o == nil || o.Overwrite == nil {
		return nil, false
	}
	return o.Overwrite, true
}

// HasOverwrite returns a boolean if a field has been set.
func (o *InlineObject27) HasOverwrite() bool {
	if o != nil && o.Overwrite != nil {
		return true
	}

	return false
}

// SetOverwrite gets a reference to the given bool and assigns it to the Overwrite field.
func (o *InlineObject27) SetOverwrite(v bool) {
	o.Overwrite = &v
}

// GetOverwriteVars returns the OverwriteVars field value if set, zero value otherwise.
func (o *InlineObject27) GetOverwriteVars() bool {
	if o == nil || o.OverwriteVars == nil {
		var ret bool
		return ret
	}
	return *o.OverwriteVars
}

// GetOverwriteVarsOk returns a tuple with the OverwriteVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetOverwriteVarsOk() (*bool, bool) {
	if o == nil || o.OverwriteVars == nil {
		return nil, false
	}
	return o.OverwriteVars, true
}

// HasOverwriteVars returns a boolean if a field has been set.
func (o *InlineObject27) HasOverwriteVars() bool {
	if o != nil && o.OverwriteVars != nil {
		return true
	}

	return false
}

// SetOverwriteVars gets a reference to the given bool and assigns it to the OverwriteVars field.
func (o *InlineObject27) SetOverwriteVars(v bool) {
	o.OverwriteVars = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *InlineObject27) GetSource() string {
	if o == nil || o.Source == nil {
		var ret string
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetSourceOk() (*string, bool) {
	if o == nil || o.Source == nil {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *InlineObject27) HasSource() bool {
	if o != nil && o.Source != nil {
		return true
	}

	return false
}

// SetSource gets a reference to the given string and assigns it to the Source field.
func (o *InlineObject27) SetSource(v string) {
	o.Source = &v
}

// GetSourcePath returns the SourcePath field value if set, zero value otherwise.
func (o *InlineObject27) GetSourcePath() string {
	if o == nil || o.SourcePath == nil {
		var ret string
		return ret
	}
	return *o.SourcePath
}

// GetSourcePathOk returns a tuple with the SourcePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetSourcePathOk() (*string, bool) {
	if o == nil || o.SourcePath == nil {
		return nil, false
	}
	return o.SourcePath, true
}

// HasSourcePath returns a boolean if a field has been set.
func (o *InlineObject27) HasSourcePath() bool {
	if o != nil && o.SourcePath != nil {
		return true
	}

	return false
}

// SetSourcePath gets a reference to the given string and assigns it to the SourcePath field.
func (o *InlineObject27) SetSourcePath(v string) {
	o.SourcePath = &v
}

// GetSourceProject returns the SourceProject field value if set, zero value otherwise.
func (o *InlineObject27) GetSourceProject() string {
	if o == nil || o.SourceProject == nil {
		var ret string
		return ret
	}
	return *o.SourceProject
}

// GetSourceProjectOk returns a tuple with the SourceProject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetSourceProjectOk() (*string, bool) {
	if o == nil || o.SourceProject == nil {
		return nil, false
	}
	return o.SourceProject, true
}

// HasSourceProject returns a boolean if a field has been set.
func (o *InlineObject27) HasSourceProject() bool {
	if o != nil && o.SourceProject != nil {
		return true
	}

	return false
}

// SetSourceProject gets a reference to the given string and assigns it to the SourceProject field.
func (o *InlineObject27) SetSourceProject(v string) {
	o.SourceProject = &v
}

// GetSourceScript returns the SourceScript field value if set, zero value otherwise.
func (o *InlineObject27) GetSourceScript() int32 {
	if o == nil || o.SourceScript == nil {
		var ret int32
		return ret
	}
	return *o.SourceScript
}

// GetSourceScriptOk returns a tuple with the SourceScript field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetSourceScriptOk() (*int32, bool) {
	if o == nil || o.SourceScript == nil {
		return nil, false
	}
	return o.SourceScript, true
}

// HasSourceScript returns a boolean if a field has been set.
func (o *InlineObject27) HasSourceScript() bool {
	if o != nil && o.SourceScript != nil {
		return true
	}

	return false
}

// SetSourceScript gets a reference to the given int32 and assigns it to the SourceScript field.
func (o *InlineObject27) SetSourceScript(v int32) {
	o.SourceScript = &v
}

// GetSourceVars returns the SourceVars field value if set, zero value otherwise.
func (o *InlineObject27) GetSourceVars() string {
	if o == nil || o.SourceVars == nil {
		var ret string
		return ret
	}
	return *o.SourceVars
}

// GetSourceVarsOk returns a tuple with the SourceVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetSourceVarsOk() (*string, bool) {
	if o == nil || o.SourceVars == nil {
		return nil, false
	}
	return o.SourceVars, true
}

// HasSourceVars returns a boolean if a field has been set.
func (o *InlineObject27) HasSourceVars() bool {
	if o != nil && o.SourceVars != nil {
		return true
	}

	return false
}

// SetSourceVars gets a reference to the given string and assigns it to the SourceVars field.
func (o *InlineObject27) SetSourceVars(v string) {
	o.SourceVars = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineObject27) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineObject27) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineObject27) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetUpdateCacheTimeout returns the UpdateCacheTimeout field value if set, zero value otherwise.
func (o *InlineObject27) GetUpdateCacheTimeout() int32 {
	if o == nil || o.UpdateCacheTimeout == nil {
		var ret int32
		return ret
	}
	return *o.UpdateCacheTimeout
}

// GetUpdateCacheTimeoutOk returns a tuple with the UpdateCacheTimeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetUpdateCacheTimeoutOk() (*int32, bool) {
	if o == nil || o.UpdateCacheTimeout == nil {
		return nil, false
	}
	return o.UpdateCacheTimeout, true
}

// HasUpdateCacheTimeout returns a boolean if a field has been set.
func (o *InlineObject27) HasUpdateCacheTimeout() bool {
	if o != nil && o.UpdateCacheTimeout != nil {
		return true
	}

	return false
}

// SetUpdateCacheTimeout gets a reference to the given int32 and assigns it to the UpdateCacheTimeout field.
func (o *InlineObject27) SetUpdateCacheTimeout(v int32) {
	o.UpdateCacheTimeout = &v
}

// GetUpdateOnLaunch returns the UpdateOnLaunch field value if set, zero value otherwise.
func (o *InlineObject27) GetUpdateOnLaunch() bool {
	if o == nil || o.UpdateOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.UpdateOnLaunch
}

// GetUpdateOnLaunchOk returns a tuple with the UpdateOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetUpdateOnLaunchOk() (*bool, bool) {
	if o == nil || o.UpdateOnLaunch == nil {
		return nil, false
	}
	return o.UpdateOnLaunch, true
}

// HasUpdateOnLaunch returns a boolean if a field has been set.
func (o *InlineObject27) HasUpdateOnLaunch() bool {
	if o != nil && o.UpdateOnLaunch != nil {
		return true
	}

	return false
}

// SetUpdateOnLaunch gets a reference to the given bool and assigns it to the UpdateOnLaunch field.
func (o *InlineObject27) SetUpdateOnLaunch(v bool) {
	o.UpdateOnLaunch = &v
}

// GetUpdateOnProjectUpdate returns the UpdateOnProjectUpdate field value if set, zero value otherwise.
func (o *InlineObject27) GetUpdateOnProjectUpdate() bool {
	if o == nil || o.UpdateOnProjectUpdate == nil {
		var ret bool
		return ret
	}
	return *o.UpdateOnProjectUpdate
}

// GetUpdateOnProjectUpdateOk returns a tuple with the UpdateOnProjectUpdate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetUpdateOnProjectUpdateOk() (*bool, bool) {
	if o == nil || o.UpdateOnProjectUpdate == nil {
		return nil, false
	}
	return o.UpdateOnProjectUpdate, true
}

// HasUpdateOnProjectUpdate returns a boolean if a field has been set.
func (o *InlineObject27) HasUpdateOnProjectUpdate() bool {
	if o != nil && o.UpdateOnProjectUpdate != nil {
		return true
	}

	return false
}

// SetUpdateOnProjectUpdate gets a reference to the given bool and assigns it to the UpdateOnProjectUpdate field.
func (o *InlineObject27) SetUpdateOnProjectUpdate(v bool) {
	o.UpdateOnProjectUpdate = &v
}

// GetVerbosity returns the Verbosity field value if set, zero value otherwise.
func (o *InlineObject27) GetVerbosity() string {
	if o == nil || o.Verbosity == nil {
		var ret string
		return ret
	}
	return *o.Verbosity
}

// GetVerbosityOk returns a tuple with the Verbosity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject27) GetVerbosityOk() (*string, bool) {
	if o == nil || o.Verbosity == nil {
		return nil, false
	}
	return o.Verbosity, true
}

// HasVerbosity returns a boolean if a field has been set.
func (o *InlineObject27) HasVerbosity() bool {
	if o != nil && o.Verbosity != nil {
		return true
	}

	return false
}

// SetVerbosity gets a reference to the given string and assigns it to the Verbosity field.
func (o *InlineObject27) SetVerbosity(v string) {
	o.Verbosity = &v
}

func (o InlineObject27) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	if o.CustomVirtualenv != nil {
		toSerialize["custom_virtualenv"] = o.CustomVirtualenv
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EnabledValue != nil {
		toSerialize["enabled_value"] = o.EnabledValue
	}
	if o.EnabledVar != nil {
		toSerialize["enabled_var"] = o.EnabledVar
	}
	if o.HostFilter != nil {
		toSerialize["host_filter"] = o.HostFilter
	}
	if true {
		toSerialize["inventory"] = o.Inventory
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Overwrite != nil {
		toSerialize["overwrite"] = o.Overwrite
	}
	if o.OverwriteVars != nil {
		toSerialize["overwrite_vars"] = o.OverwriteVars
	}
	if o.Source != nil {
		toSerialize["source"] = o.Source
	}
	if o.SourcePath != nil {
		toSerialize["source_path"] = o.SourcePath
	}
	if o.SourceProject != nil {
		toSerialize["source_project"] = o.SourceProject
	}
	if o.SourceScript != nil {
		toSerialize["source_script"] = o.SourceScript
	}
	if o.SourceVars != nil {
		toSerialize["source_vars"] = o.SourceVars
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.UpdateCacheTimeout != nil {
		toSerialize["update_cache_timeout"] = o.UpdateCacheTimeout
	}
	if o.UpdateOnLaunch != nil {
		toSerialize["update_on_launch"] = o.UpdateOnLaunch
	}
	if o.UpdateOnProjectUpdate != nil {
		toSerialize["update_on_project_update"] = o.UpdateOnProjectUpdate
	}
	if o.Verbosity != nil {
		toSerialize["verbosity"] = o.Verbosity
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject27 struct {
	value *InlineObject27
	isSet bool
}

func (v NullableInlineObject27) Get() *InlineObject27 {
	return v.value
}

func (v *NullableInlineObject27) Set(val *InlineObject27) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject27) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject27) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject27(val *InlineObject27) *NullableInlineObject27 {
	return &NullableInlineObject27{value: val, isSet: true}
}

func (v NullableInlineObject27) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject27) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
