/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version:
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject57 struct for InlineObject57
type InlineObject57 struct {
	//
	Description *string `json:"description,omitempty"`
	//
	DiffMode *bool `json:"diff_mode,omitempty"`
	// Enables processing of this schedule.
	Enabled *bool `json:"enabled,omitempty"`
	//
	ExtraData *string `json:"extra_data,omitempty"`
	// Inventory applied as a prompt, assuming job template prompts for inventory
	Inventory *int32 `json:"inventory,omitempty"`
	//
	JobTags *string `json:"job_tags,omitempty"`
	//
	JobType *string `json:"job_type,omitempty"`
	//
	Limit *string `json:"limit,omitempty"`
	//
	Name string `json:"name"`
	// A value representing the schedules iCal recurrence rule.
	Rrule string `json:"rrule"`
	//
	ScmBranch *string `json:"scm_branch,omitempty"`
	//
	SkipTags *string `json:"skip_tags,omitempty"`
	//
	UnifiedJobTemplate int32 `json:"unified_job_template"`
	//
	Verbosity *string `json:"verbosity,omitempty"`
}

// NewInlineObject57 instantiates a new InlineObject57 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject57(name string, rrule string, unifiedJobTemplate int32) *InlineObject57 {
	this := InlineObject57{}
	this.Name = name
	this.Rrule = rrule
	this.UnifiedJobTemplate = unifiedJobTemplate
	return &this
}

// NewInlineObject57WithDefaults instantiates a new InlineObject57 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject57WithDefaults() *InlineObject57 {
	this := InlineObject57{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject57) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject57) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject57) SetDescription(v string) {
	o.Description = &v
}

// GetDiffMode returns the DiffMode field value if set, zero value otherwise.
func (o *InlineObject57) GetDiffMode() bool {
	if o == nil || o.DiffMode == nil {
		var ret bool
		return ret
	}
	return *o.DiffMode
}

// GetDiffModeOk returns a tuple with the DiffMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetDiffModeOk() (*bool, bool) {
	if o == nil || o.DiffMode == nil {
		return nil, false
	}
	return o.DiffMode, true
}

// HasDiffMode returns a boolean if a field has been set.
func (o *InlineObject57) HasDiffMode() bool {
	if o != nil && o.DiffMode != nil {
		return true
	}

	return false
}

// SetDiffMode gets a reference to the given bool and assigns it to the DiffMode field.
func (o *InlineObject57) SetDiffMode(v bool) {
	o.DiffMode = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *InlineObject57) GetEnabled() bool {
	if o == nil || o.Enabled == nil {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetEnabledOk() (*bool, bool) {
	if o == nil || o.Enabled == nil {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *InlineObject57) HasEnabled() bool {
	if o != nil && o.Enabled != nil {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *InlineObject57) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise.
func (o *InlineObject57) GetExtraData() string {
	if o == nil || o.ExtraData == nil {
		var ret string
		return ret
	}
	return *o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetExtraDataOk() (*string, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *InlineObject57) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given string and assigns it to the ExtraData field.
func (o *InlineObject57) SetExtraData(v string) {
	o.ExtraData = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *InlineObject57) GetInventory() int32 {
	if o == nil || o.Inventory == nil {
		var ret int32
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetInventoryOk() (*int32, bool) {
	if o == nil || o.Inventory == nil {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *InlineObject57) HasInventory() bool {
	if o != nil && o.Inventory != nil {
		return true
	}

	return false
}

// SetInventory gets a reference to the given int32 and assigns it to the Inventory field.
func (o *InlineObject57) SetInventory(v int32) {
	o.Inventory = &v
}

// GetJobTags returns the JobTags field value if set, zero value otherwise.
func (o *InlineObject57) GetJobTags() string {
	if o == nil || o.JobTags == nil {
		var ret string
		return ret
	}
	return *o.JobTags
}

// GetJobTagsOk returns a tuple with the JobTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetJobTagsOk() (*string, bool) {
	if o == nil || o.JobTags == nil {
		return nil, false
	}
	return o.JobTags, true
}

// HasJobTags returns a boolean if a field has been set.
func (o *InlineObject57) HasJobTags() bool {
	if o != nil && o.JobTags != nil {
		return true
	}

	return false
}

// SetJobTags gets a reference to the given string and assigns it to the JobTags field.
func (o *InlineObject57) SetJobTags(v string) {
	o.JobTags = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *InlineObject57) GetJobType() string {
	if o == nil || o.JobType == nil {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetJobTypeOk() (*string, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *InlineObject57) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *InlineObject57) SetJobType(v string) {
	o.JobType = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *InlineObject57) GetLimit() string {
	if o == nil || o.Limit == nil {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetLimitOk() (*string, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *InlineObject57) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *InlineObject57) SetLimit(v string) {
	o.Limit = &v
}

// GetName returns the Name field value
func (o *InlineObject57) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject57) SetName(v string) {
	o.Name = v
}

// GetRrule returns the Rrule field value
func (o *InlineObject57) GetRrule() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Rrule
}

// GetRruleOk returns a tuple with the Rrule field value
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetRruleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Rrule, true
}

// SetRrule sets field value
func (o *InlineObject57) SetRrule(v string) {
	o.Rrule = v
}

// GetScmBranch returns the ScmBranch field value if set, zero value otherwise.
func (o *InlineObject57) GetScmBranch() string {
	if o == nil || o.ScmBranch == nil {
		var ret string
		return ret
	}
	return *o.ScmBranch
}

// GetScmBranchOk returns a tuple with the ScmBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetScmBranchOk() (*string, bool) {
	if o == nil || o.ScmBranch == nil {
		return nil, false
	}
	return o.ScmBranch, true
}

// HasScmBranch returns a boolean if a field has been set.
func (o *InlineObject57) HasScmBranch() bool {
	if o != nil && o.ScmBranch != nil {
		return true
	}

	return false
}

// SetScmBranch gets a reference to the given string and assigns it to the ScmBranch field.
func (o *InlineObject57) SetScmBranch(v string) {
	o.ScmBranch = &v
}

// GetSkipTags returns the SkipTags field value if set, zero value otherwise.
func (o *InlineObject57) GetSkipTags() string {
	if o == nil || o.SkipTags == nil {
		var ret string
		return ret
	}
	return *o.SkipTags
}

// GetSkipTagsOk returns a tuple with the SkipTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetSkipTagsOk() (*string, bool) {
	if o == nil || o.SkipTags == nil {
		return nil, false
	}
	return o.SkipTags, true
}

// HasSkipTags returns a boolean if a field has been set.
func (o *InlineObject57) HasSkipTags() bool {
	if o != nil && o.SkipTags != nil {
		return true
	}

	return false
}

// SetSkipTags gets a reference to the given string and assigns it to the SkipTags field.
func (o *InlineObject57) SetSkipTags(v string) {
	o.SkipTags = &v
}

// GetUnifiedJobTemplate returns the UnifiedJobTemplate field value
func (o *InlineObject57) GetUnifiedJobTemplate() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnifiedJobTemplate
}

// GetUnifiedJobTemplateOk returns a tuple with the UnifiedJobTemplate field value
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetUnifiedJobTemplateOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnifiedJobTemplate, true
}

// SetUnifiedJobTemplate sets field value
func (o *InlineObject57) SetUnifiedJobTemplate(v int32) {
	o.UnifiedJobTemplate = v
}

// GetVerbosity returns the Verbosity field value if set, zero value otherwise.
func (o *InlineObject57) GetVerbosity() string {
	if o == nil || o.Verbosity == nil {
		var ret string
		return ret
	}
	return *o.Verbosity
}

// GetVerbosityOk returns a tuple with the Verbosity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject57) GetVerbosityOk() (*string, bool) {
	if o == nil || o.Verbosity == nil {
		return nil, false
	}
	return o.Verbosity, true
}

// HasVerbosity returns a boolean if a field has been set.
func (o *InlineObject57) HasVerbosity() bool {
	if o != nil && o.Verbosity != nil {
		return true
	}

	return false
}

// SetVerbosity gets a reference to the given string and assigns it to the Verbosity field.
func (o *InlineObject57) SetVerbosity(v string) {
	o.Verbosity = &v
}

func (o InlineObject57) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DiffMode != nil {
		toSerialize["diff_mode"] = o.DiffMode
	}
	if o.Enabled != nil {
		toSerialize["enabled"] = o.Enabled
	}
	if o.ExtraData != nil {
		toSerialize["extra_data"] = o.ExtraData
	}
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.JobTags != nil {
		toSerialize["job_tags"] = o.JobTags
	}
	if o.JobType != nil {
		toSerialize["job_type"] = o.JobType
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["rrule"] = o.Rrule
	}
	if o.ScmBranch != nil {
		toSerialize["scm_branch"] = o.ScmBranch
	}
	if o.SkipTags != nil {
		toSerialize["skip_tags"] = o.SkipTags
	}
	if true {
		toSerialize["unified_job_template"] = o.UnifiedJobTemplate
	}
	if o.Verbosity != nil {
		toSerialize["verbosity"] = o.Verbosity
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject57 struct {
	value *InlineObject57
	isSet bool
}

func (v NullableInlineObject57) Get() *InlineObject57 {
	return v.value
}

func (v *NullableInlineObject57) Set(val *InlineObject57) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject57) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject57) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject57(val *InlineObject57) *NullableInlineObject57 {
	return &NullableInlineObject57{value: val, isSet: true}
}

func (v NullableInlineObject57) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject57) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
