/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject46 struct for InlineObject46
type InlineObject46 struct {
	// 
	AllowSimultaneous *bool `json:"allow_simultaneous,omitempty"`
	// 
	AskCredentialOnLaunch *bool `json:"ask_credential_on_launch,omitempty"`
	// 
	AskDiffModeOnLaunch *bool `json:"ask_diff_mode_on_launch,omitempty"`
	// 
	AskInventoryOnLaunch *bool `json:"ask_inventory_on_launch,omitempty"`
	// 
	AskJobTypeOnLaunch *bool `json:"ask_job_type_on_launch,omitempty"`
	// 
	AskLimitOnLaunch *bool `json:"ask_limit_on_launch,omitempty"`
	// 
	AskScmBranchOnLaunch *bool `json:"ask_scm_branch_on_launch,omitempty"`
	// 
	AskSkipTagsOnLaunch *bool `json:"ask_skip_tags_on_launch,omitempty"`
	// 
	AskTagsOnLaunch *bool `json:"ask_tags_on_launch,omitempty"`
	// 
	AskVariablesOnLaunch *bool `json:"ask_variables_on_launch,omitempty"`
	// 
	AskVerbosityOnLaunch *bool `json:"ask_verbosity_on_launch,omitempty"`
	// 
	BecomeEnabled *bool `json:"become_enabled,omitempty"`
	// Local absolute file path containing a custom Python virtualenv to use
	CustomVirtualenv *string `json:"custom_virtualenv,omitempty"`
	// 
	Description *string `json:"description,omitempty"`
	// If enabled, textual changes made to any templated files on the host are shown in the standard output
	DiffMode *bool `json:"diff_mode,omitempty"`
	// 
	ExtraVars *string `json:"extra_vars,omitempty"`
	// 
	ForceHandlers *bool `json:"force_handlers,omitempty"`
	// 
	Forks *int32 `json:"forks,omitempty"`
	// 
	HostConfigKey *string `json:"host_config_key,omitempty"`
	// 
	Inventory *int32 `json:"inventory,omitempty"`
	// The number of jobs to slice into at runtime. Will cause the Job Template to launch a workflow if value is greater than 1.
	JobSliceCount *int32 `json:"job_slice_count,omitempty"`
	// 
	JobTags *string `json:"job_tags,omitempty"`
	// 
	JobType *string `json:"job_type,omitempty"`
	// 
	Limit *string `json:"limit,omitempty"`
	// 
	Name string `json:"name"`
	// 
	Playbook *string `json:"playbook,omitempty"`
	// 
	Project *string `json:"project,omitempty"`
	// Branch to use in job run. Project default used if blank. Only allowed if project allow_override field is set to true.
	ScmBranch *string `json:"scm_branch,omitempty"`
	// 
	SkipTags *string `json:"skip_tags,omitempty"`
	// 
	StartAtTask *string `json:"start_at_task,omitempty"`
	// 
	SurveyEnabled *bool `json:"survey_enabled,omitempty"`
	// The amount of time (in seconds) to run before the task is canceled.
	Timeout *int32 `json:"timeout,omitempty"`
	// If enabled, Tower will act as an Ansible Fact Cache Plugin; persisting facts at the end of a playbook run to the database and caching facts for use by Ansible.
	UseFactCache *bool `json:"use_fact_cache,omitempty"`
	// 
	Verbosity *string `json:"verbosity,omitempty"`
	// Personal Access Token for posting back the status to the service API
	WebhookCredential *int32 `json:"webhook_credential,omitempty"`
	// Service that webhook requests will be accepted from
	WebhookService *string `json:"webhook_service,omitempty"`
}

// NewInlineObject46 instantiates a new InlineObject46 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject46(name string, ) *InlineObject46 {
	this := InlineObject46{}
	this.Name = name
	return &this
}

// NewInlineObject46WithDefaults instantiates a new InlineObject46 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject46WithDefaults() *InlineObject46 {
	this := InlineObject46{}
	return &this
}

// GetAllowSimultaneous returns the AllowSimultaneous field value if set, zero value otherwise.
func (o *InlineObject46) GetAllowSimultaneous() bool {
	if o == nil || o.AllowSimultaneous == nil {
		var ret bool
		return ret
	}
	return *o.AllowSimultaneous
}

// GetAllowSimultaneousOk returns a tuple with the AllowSimultaneous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAllowSimultaneousOk() (*bool, bool) {
	if o == nil || o.AllowSimultaneous == nil {
		return nil, false
	}
	return o.AllowSimultaneous, true
}

// HasAllowSimultaneous returns a boolean if a field has been set.
func (o *InlineObject46) HasAllowSimultaneous() bool {
	if o != nil && o.AllowSimultaneous != nil {
		return true
	}

	return false
}

// SetAllowSimultaneous gets a reference to the given bool and assigns it to the AllowSimultaneous field.
func (o *InlineObject46) SetAllowSimultaneous(v bool) {
	o.AllowSimultaneous = &v
}

// GetAskCredentialOnLaunch returns the AskCredentialOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskCredentialOnLaunch() bool {
	if o == nil || o.AskCredentialOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskCredentialOnLaunch
}

// GetAskCredentialOnLaunchOk returns a tuple with the AskCredentialOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskCredentialOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskCredentialOnLaunch == nil {
		return nil, false
	}
	return o.AskCredentialOnLaunch, true
}

// HasAskCredentialOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskCredentialOnLaunch() bool {
	if o != nil && o.AskCredentialOnLaunch != nil {
		return true
	}

	return false
}

// SetAskCredentialOnLaunch gets a reference to the given bool and assigns it to the AskCredentialOnLaunch field.
func (o *InlineObject46) SetAskCredentialOnLaunch(v bool) {
	o.AskCredentialOnLaunch = &v
}

// GetAskDiffModeOnLaunch returns the AskDiffModeOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskDiffModeOnLaunch() bool {
	if o == nil || o.AskDiffModeOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskDiffModeOnLaunch
}

// GetAskDiffModeOnLaunchOk returns a tuple with the AskDiffModeOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskDiffModeOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskDiffModeOnLaunch == nil {
		return nil, false
	}
	return o.AskDiffModeOnLaunch, true
}

// HasAskDiffModeOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskDiffModeOnLaunch() bool {
	if o != nil && o.AskDiffModeOnLaunch != nil {
		return true
	}

	return false
}

// SetAskDiffModeOnLaunch gets a reference to the given bool and assigns it to the AskDiffModeOnLaunch field.
func (o *InlineObject46) SetAskDiffModeOnLaunch(v bool) {
	o.AskDiffModeOnLaunch = &v
}

// GetAskInventoryOnLaunch returns the AskInventoryOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskInventoryOnLaunch() bool {
	if o == nil || o.AskInventoryOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskInventoryOnLaunch
}

// GetAskInventoryOnLaunchOk returns a tuple with the AskInventoryOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskInventoryOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskInventoryOnLaunch == nil {
		return nil, false
	}
	return o.AskInventoryOnLaunch, true
}

// HasAskInventoryOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskInventoryOnLaunch() bool {
	if o != nil && o.AskInventoryOnLaunch != nil {
		return true
	}

	return false
}

// SetAskInventoryOnLaunch gets a reference to the given bool and assigns it to the AskInventoryOnLaunch field.
func (o *InlineObject46) SetAskInventoryOnLaunch(v bool) {
	o.AskInventoryOnLaunch = &v
}

// GetAskJobTypeOnLaunch returns the AskJobTypeOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskJobTypeOnLaunch() bool {
	if o == nil || o.AskJobTypeOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskJobTypeOnLaunch
}

// GetAskJobTypeOnLaunchOk returns a tuple with the AskJobTypeOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskJobTypeOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskJobTypeOnLaunch == nil {
		return nil, false
	}
	return o.AskJobTypeOnLaunch, true
}

// HasAskJobTypeOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskJobTypeOnLaunch() bool {
	if o != nil && o.AskJobTypeOnLaunch != nil {
		return true
	}

	return false
}

// SetAskJobTypeOnLaunch gets a reference to the given bool and assigns it to the AskJobTypeOnLaunch field.
func (o *InlineObject46) SetAskJobTypeOnLaunch(v bool) {
	o.AskJobTypeOnLaunch = &v
}

// GetAskLimitOnLaunch returns the AskLimitOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskLimitOnLaunch() bool {
	if o == nil || o.AskLimitOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskLimitOnLaunch
}

// GetAskLimitOnLaunchOk returns a tuple with the AskLimitOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskLimitOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskLimitOnLaunch == nil {
		return nil, false
	}
	return o.AskLimitOnLaunch, true
}

// HasAskLimitOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskLimitOnLaunch() bool {
	if o != nil && o.AskLimitOnLaunch != nil {
		return true
	}

	return false
}

// SetAskLimitOnLaunch gets a reference to the given bool and assigns it to the AskLimitOnLaunch field.
func (o *InlineObject46) SetAskLimitOnLaunch(v bool) {
	o.AskLimitOnLaunch = &v
}

// GetAskScmBranchOnLaunch returns the AskScmBranchOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskScmBranchOnLaunch() bool {
	if o == nil || o.AskScmBranchOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskScmBranchOnLaunch
}

// GetAskScmBranchOnLaunchOk returns a tuple with the AskScmBranchOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskScmBranchOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskScmBranchOnLaunch == nil {
		return nil, false
	}
	return o.AskScmBranchOnLaunch, true
}

// HasAskScmBranchOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskScmBranchOnLaunch() bool {
	if o != nil && o.AskScmBranchOnLaunch != nil {
		return true
	}

	return false
}

// SetAskScmBranchOnLaunch gets a reference to the given bool and assigns it to the AskScmBranchOnLaunch field.
func (o *InlineObject46) SetAskScmBranchOnLaunch(v bool) {
	o.AskScmBranchOnLaunch = &v
}

// GetAskSkipTagsOnLaunch returns the AskSkipTagsOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskSkipTagsOnLaunch() bool {
	if o == nil || o.AskSkipTagsOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskSkipTagsOnLaunch
}

// GetAskSkipTagsOnLaunchOk returns a tuple with the AskSkipTagsOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskSkipTagsOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskSkipTagsOnLaunch == nil {
		return nil, false
	}
	return o.AskSkipTagsOnLaunch, true
}

// HasAskSkipTagsOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskSkipTagsOnLaunch() bool {
	if o != nil && o.AskSkipTagsOnLaunch != nil {
		return true
	}

	return false
}

// SetAskSkipTagsOnLaunch gets a reference to the given bool and assigns it to the AskSkipTagsOnLaunch field.
func (o *InlineObject46) SetAskSkipTagsOnLaunch(v bool) {
	o.AskSkipTagsOnLaunch = &v
}

// GetAskTagsOnLaunch returns the AskTagsOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskTagsOnLaunch() bool {
	if o == nil || o.AskTagsOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskTagsOnLaunch
}

// GetAskTagsOnLaunchOk returns a tuple with the AskTagsOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskTagsOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskTagsOnLaunch == nil {
		return nil, false
	}
	return o.AskTagsOnLaunch, true
}

// HasAskTagsOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskTagsOnLaunch() bool {
	if o != nil && o.AskTagsOnLaunch != nil {
		return true
	}

	return false
}

// SetAskTagsOnLaunch gets a reference to the given bool and assigns it to the AskTagsOnLaunch field.
func (o *InlineObject46) SetAskTagsOnLaunch(v bool) {
	o.AskTagsOnLaunch = &v
}

// GetAskVariablesOnLaunch returns the AskVariablesOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskVariablesOnLaunch() bool {
	if o == nil || o.AskVariablesOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskVariablesOnLaunch
}

// GetAskVariablesOnLaunchOk returns a tuple with the AskVariablesOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskVariablesOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskVariablesOnLaunch == nil {
		return nil, false
	}
	return o.AskVariablesOnLaunch, true
}

// HasAskVariablesOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskVariablesOnLaunch() bool {
	if o != nil && o.AskVariablesOnLaunch != nil {
		return true
	}

	return false
}

// SetAskVariablesOnLaunch gets a reference to the given bool and assigns it to the AskVariablesOnLaunch field.
func (o *InlineObject46) SetAskVariablesOnLaunch(v bool) {
	o.AskVariablesOnLaunch = &v
}

// GetAskVerbosityOnLaunch returns the AskVerbosityOnLaunch field value if set, zero value otherwise.
func (o *InlineObject46) GetAskVerbosityOnLaunch() bool {
	if o == nil || o.AskVerbosityOnLaunch == nil {
		var ret bool
		return ret
	}
	return *o.AskVerbosityOnLaunch
}

// GetAskVerbosityOnLaunchOk returns a tuple with the AskVerbosityOnLaunch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetAskVerbosityOnLaunchOk() (*bool, bool) {
	if o == nil || o.AskVerbosityOnLaunch == nil {
		return nil, false
	}
	return o.AskVerbosityOnLaunch, true
}

// HasAskVerbosityOnLaunch returns a boolean if a field has been set.
func (o *InlineObject46) HasAskVerbosityOnLaunch() bool {
	if o != nil && o.AskVerbosityOnLaunch != nil {
		return true
	}

	return false
}

// SetAskVerbosityOnLaunch gets a reference to the given bool and assigns it to the AskVerbosityOnLaunch field.
func (o *InlineObject46) SetAskVerbosityOnLaunch(v bool) {
	o.AskVerbosityOnLaunch = &v
}

// GetBecomeEnabled returns the BecomeEnabled field value if set, zero value otherwise.
func (o *InlineObject46) GetBecomeEnabled() bool {
	if o == nil || o.BecomeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.BecomeEnabled
}

// GetBecomeEnabledOk returns a tuple with the BecomeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetBecomeEnabledOk() (*bool, bool) {
	if o == nil || o.BecomeEnabled == nil {
		return nil, false
	}
	return o.BecomeEnabled, true
}

// HasBecomeEnabled returns a boolean if a field has been set.
func (o *InlineObject46) HasBecomeEnabled() bool {
	if o != nil && o.BecomeEnabled != nil {
		return true
	}

	return false
}

// SetBecomeEnabled gets a reference to the given bool and assigns it to the BecomeEnabled field.
func (o *InlineObject46) SetBecomeEnabled(v bool) {
	o.BecomeEnabled = &v
}

// GetCustomVirtualenv returns the CustomVirtualenv field value if set, zero value otherwise.
func (o *InlineObject46) GetCustomVirtualenv() string {
	if o == nil || o.CustomVirtualenv == nil {
		var ret string
		return ret
	}
	return *o.CustomVirtualenv
}

// GetCustomVirtualenvOk returns a tuple with the CustomVirtualenv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetCustomVirtualenvOk() (*string, bool) {
	if o == nil || o.CustomVirtualenv == nil {
		return nil, false
	}
	return o.CustomVirtualenv, true
}

// HasCustomVirtualenv returns a boolean if a field has been set.
func (o *InlineObject46) HasCustomVirtualenv() bool {
	if o != nil && o.CustomVirtualenv != nil {
		return true
	}

	return false
}

// SetCustomVirtualenv gets a reference to the given string and assigns it to the CustomVirtualenv field.
func (o *InlineObject46) SetCustomVirtualenv(v string) {
	o.CustomVirtualenv = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject46) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject46) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject46) SetDescription(v string) {
	o.Description = &v
}

// GetDiffMode returns the DiffMode field value if set, zero value otherwise.
func (o *InlineObject46) GetDiffMode() bool {
	if o == nil || o.DiffMode == nil {
		var ret bool
		return ret
	}
	return *o.DiffMode
}

// GetDiffModeOk returns a tuple with the DiffMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetDiffModeOk() (*bool, bool) {
	if o == nil || o.DiffMode == nil {
		return nil, false
	}
	return o.DiffMode, true
}

// HasDiffMode returns a boolean if a field has been set.
func (o *InlineObject46) HasDiffMode() bool {
	if o != nil && o.DiffMode != nil {
		return true
	}

	return false
}

// SetDiffMode gets a reference to the given bool and assigns it to the DiffMode field.
func (o *InlineObject46) SetDiffMode(v bool) {
	o.DiffMode = &v
}

// GetExtraVars returns the ExtraVars field value if set, zero value otherwise.
func (o *InlineObject46) GetExtraVars() string {
	if o == nil || o.ExtraVars == nil {
		var ret string
		return ret
	}
	return *o.ExtraVars
}

// GetExtraVarsOk returns a tuple with the ExtraVars field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetExtraVarsOk() (*string, bool) {
	if o == nil || o.ExtraVars == nil {
		return nil, false
	}
	return o.ExtraVars, true
}

// HasExtraVars returns a boolean if a field has been set.
func (o *InlineObject46) HasExtraVars() bool {
	if o != nil && o.ExtraVars != nil {
		return true
	}

	return false
}

// SetExtraVars gets a reference to the given string and assigns it to the ExtraVars field.
func (o *InlineObject46) SetExtraVars(v string) {
	o.ExtraVars = &v
}

// GetForceHandlers returns the ForceHandlers field value if set, zero value otherwise.
func (o *InlineObject46) GetForceHandlers() bool {
	if o == nil || o.ForceHandlers == nil {
		var ret bool
		return ret
	}
	return *o.ForceHandlers
}

// GetForceHandlersOk returns a tuple with the ForceHandlers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetForceHandlersOk() (*bool, bool) {
	if o == nil || o.ForceHandlers == nil {
		return nil, false
	}
	return o.ForceHandlers, true
}

// HasForceHandlers returns a boolean if a field has been set.
func (o *InlineObject46) HasForceHandlers() bool {
	if o != nil && o.ForceHandlers != nil {
		return true
	}

	return false
}

// SetForceHandlers gets a reference to the given bool and assigns it to the ForceHandlers field.
func (o *InlineObject46) SetForceHandlers(v bool) {
	o.ForceHandlers = &v
}

// GetForks returns the Forks field value if set, zero value otherwise.
func (o *InlineObject46) GetForks() int32 {
	if o == nil || o.Forks == nil {
		var ret int32
		return ret
	}
	return *o.Forks
}

// GetForksOk returns a tuple with the Forks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetForksOk() (*int32, bool) {
	if o == nil || o.Forks == nil {
		return nil, false
	}
	return o.Forks, true
}

// HasForks returns a boolean if a field has been set.
func (o *InlineObject46) HasForks() bool {
	if o != nil && o.Forks != nil {
		return true
	}

	return false
}

// SetForks gets a reference to the given int32 and assigns it to the Forks field.
func (o *InlineObject46) SetForks(v int32) {
	o.Forks = &v
}

// GetHostConfigKey returns the HostConfigKey field value if set, zero value otherwise.
func (o *InlineObject46) GetHostConfigKey() string {
	if o == nil || o.HostConfigKey == nil {
		var ret string
		return ret
	}
	return *o.HostConfigKey
}

// GetHostConfigKeyOk returns a tuple with the HostConfigKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetHostConfigKeyOk() (*string, bool) {
	if o == nil || o.HostConfigKey == nil {
		return nil, false
	}
	return o.HostConfigKey, true
}

// HasHostConfigKey returns a boolean if a field has been set.
func (o *InlineObject46) HasHostConfigKey() bool {
	if o != nil && o.HostConfigKey != nil {
		return true
	}

	return false
}

// SetHostConfigKey gets a reference to the given string and assigns it to the HostConfigKey field.
func (o *InlineObject46) SetHostConfigKey(v string) {
	o.HostConfigKey = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *InlineObject46) GetInventory() int32 {
	if o == nil || o.Inventory == nil {
		var ret int32
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetInventoryOk() (*int32, bool) {
	if o == nil || o.Inventory == nil {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *InlineObject46) HasInventory() bool {
	if o != nil && o.Inventory != nil {
		return true
	}

	return false
}

// SetInventory gets a reference to the given int32 and assigns it to the Inventory field.
func (o *InlineObject46) SetInventory(v int32) {
	o.Inventory = &v
}

// GetJobSliceCount returns the JobSliceCount field value if set, zero value otherwise.
func (o *InlineObject46) GetJobSliceCount() int32 {
	if o == nil || o.JobSliceCount == nil {
		var ret int32
		return ret
	}
	return *o.JobSliceCount
}

// GetJobSliceCountOk returns a tuple with the JobSliceCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetJobSliceCountOk() (*int32, bool) {
	if o == nil || o.JobSliceCount == nil {
		return nil, false
	}
	return o.JobSliceCount, true
}

// HasJobSliceCount returns a boolean if a field has been set.
func (o *InlineObject46) HasJobSliceCount() bool {
	if o != nil && o.JobSliceCount != nil {
		return true
	}

	return false
}

// SetJobSliceCount gets a reference to the given int32 and assigns it to the JobSliceCount field.
func (o *InlineObject46) SetJobSliceCount(v int32) {
	o.JobSliceCount = &v
}

// GetJobTags returns the JobTags field value if set, zero value otherwise.
func (o *InlineObject46) GetJobTags() string {
	if o == nil || o.JobTags == nil {
		var ret string
		return ret
	}
	return *o.JobTags
}

// GetJobTagsOk returns a tuple with the JobTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetJobTagsOk() (*string, bool) {
	if o == nil || o.JobTags == nil {
		return nil, false
	}
	return o.JobTags, true
}

// HasJobTags returns a boolean if a field has been set.
func (o *InlineObject46) HasJobTags() bool {
	if o != nil && o.JobTags != nil {
		return true
	}

	return false
}

// SetJobTags gets a reference to the given string and assigns it to the JobTags field.
func (o *InlineObject46) SetJobTags(v string) {
	o.JobTags = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *InlineObject46) GetJobType() string {
	if o == nil || o.JobType == nil {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetJobTypeOk() (*string, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *InlineObject46) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *InlineObject46) SetJobType(v string) {
	o.JobType = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *InlineObject46) GetLimit() string {
	if o == nil || o.Limit == nil {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetLimitOk() (*string, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *InlineObject46) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *InlineObject46) SetLimit(v string) {
	o.Limit = &v
}

// GetName returns the Name field value
func (o *InlineObject46) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject46) SetName(v string) {
	o.Name = v
}

// GetPlaybook returns the Playbook field value if set, zero value otherwise.
func (o *InlineObject46) GetPlaybook() string {
	if o == nil || o.Playbook == nil {
		var ret string
		return ret
	}
	return *o.Playbook
}

// GetPlaybookOk returns a tuple with the Playbook field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetPlaybookOk() (*string, bool) {
	if o == nil || o.Playbook == nil {
		return nil, false
	}
	return o.Playbook, true
}

// HasPlaybook returns a boolean if a field has been set.
func (o *InlineObject46) HasPlaybook() bool {
	if o != nil && o.Playbook != nil {
		return true
	}

	return false
}

// SetPlaybook gets a reference to the given string and assigns it to the Playbook field.
func (o *InlineObject46) SetPlaybook(v string) {
	o.Playbook = &v
}

// GetProject returns the Project field value if set, zero value otherwise.
func (o *InlineObject46) GetProject() string {
	if o == nil || o.Project == nil {
		var ret string
		return ret
	}
	return *o.Project
}

// GetProjectOk returns a tuple with the Project field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetProjectOk() (*string, bool) {
	if o == nil || o.Project == nil {
		return nil, false
	}
	return o.Project, true
}

// HasProject returns a boolean if a field has been set.
func (o *InlineObject46) HasProject() bool {
	if o != nil && o.Project != nil {
		return true
	}

	return false
}

// SetProject gets a reference to the given string and assigns it to the Project field.
func (o *InlineObject46) SetProject(v string) {
	o.Project = &v
}

// GetScmBranch returns the ScmBranch field value if set, zero value otherwise.
func (o *InlineObject46) GetScmBranch() string {
	if o == nil || o.ScmBranch == nil {
		var ret string
		return ret
	}
	return *o.ScmBranch
}

// GetScmBranchOk returns a tuple with the ScmBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetScmBranchOk() (*string, bool) {
	if o == nil || o.ScmBranch == nil {
		return nil, false
	}
	return o.ScmBranch, true
}

// HasScmBranch returns a boolean if a field has been set.
func (o *InlineObject46) HasScmBranch() bool {
	if o != nil && o.ScmBranch != nil {
		return true
	}

	return false
}

// SetScmBranch gets a reference to the given string and assigns it to the ScmBranch field.
func (o *InlineObject46) SetScmBranch(v string) {
	o.ScmBranch = &v
}

// GetSkipTags returns the SkipTags field value if set, zero value otherwise.
func (o *InlineObject46) GetSkipTags() string {
	if o == nil || o.SkipTags == nil {
		var ret string
		return ret
	}
	return *o.SkipTags
}

// GetSkipTagsOk returns a tuple with the SkipTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetSkipTagsOk() (*string, bool) {
	if o == nil || o.SkipTags == nil {
		return nil, false
	}
	return o.SkipTags, true
}

// HasSkipTags returns a boolean if a field has been set.
func (o *InlineObject46) HasSkipTags() bool {
	if o != nil && o.SkipTags != nil {
		return true
	}

	return false
}

// SetSkipTags gets a reference to the given string and assigns it to the SkipTags field.
func (o *InlineObject46) SetSkipTags(v string) {
	o.SkipTags = &v
}

// GetStartAtTask returns the StartAtTask field value if set, zero value otherwise.
func (o *InlineObject46) GetStartAtTask() string {
	if o == nil || o.StartAtTask == nil {
		var ret string
		return ret
	}
	return *o.StartAtTask
}

// GetStartAtTaskOk returns a tuple with the StartAtTask field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetStartAtTaskOk() (*string, bool) {
	if o == nil || o.StartAtTask == nil {
		return nil, false
	}
	return o.StartAtTask, true
}

// HasStartAtTask returns a boolean if a field has been set.
func (o *InlineObject46) HasStartAtTask() bool {
	if o != nil && o.StartAtTask != nil {
		return true
	}

	return false
}

// SetStartAtTask gets a reference to the given string and assigns it to the StartAtTask field.
func (o *InlineObject46) SetStartAtTask(v string) {
	o.StartAtTask = &v
}

// GetSurveyEnabled returns the SurveyEnabled field value if set, zero value otherwise.
func (o *InlineObject46) GetSurveyEnabled() bool {
	if o == nil || o.SurveyEnabled == nil {
		var ret bool
		return ret
	}
	return *o.SurveyEnabled
}

// GetSurveyEnabledOk returns a tuple with the SurveyEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetSurveyEnabledOk() (*bool, bool) {
	if o == nil || o.SurveyEnabled == nil {
		return nil, false
	}
	return o.SurveyEnabled, true
}

// HasSurveyEnabled returns a boolean if a field has been set.
func (o *InlineObject46) HasSurveyEnabled() bool {
	if o != nil && o.SurveyEnabled != nil {
		return true
	}

	return false
}

// SetSurveyEnabled gets a reference to the given bool and assigns it to the SurveyEnabled field.
func (o *InlineObject46) SetSurveyEnabled(v bool) {
	o.SurveyEnabled = &v
}

// GetTimeout returns the Timeout field value if set, zero value otherwise.
func (o *InlineObject46) GetTimeout() int32 {
	if o == nil || o.Timeout == nil {
		var ret int32
		return ret
	}
	return *o.Timeout
}

// GetTimeoutOk returns a tuple with the Timeout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetTimeoutOk() (*int32, bool) {
	if o == nil || o.Timeout == nil {
		return nil, false
	}
	return o.Timeout, true
}

// HasTimeout returns a boolean if a field has been set.
func (o *InlineObject46) HasTimeout() bool {
	if o != nil && o.Timeout != nil {
		return true
	}

	return false
}

// SetTimeout gets a reference to the given int32 and assigns it to the Timeout field.
func (o *InlineObject46) SetTimeout(v int32) {
	o.Timeout = &v
}

// GetUseFactCache returns the UseFactCache field value if set, zero value otherwise.
func (o *InlineObject46) GetUseFactCache() bool {
	if o == nil || o.UseFactCache == nil {
		var ret bool
		return ret
	}
	return *o.UseFactCache
}

// GetUseFactCacheOk returns a tuple with the UseFactCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetUseFactCacheOk() (*bool, bool) {
	if o == nil || o.UseFactCache == nil {
		return nil, false
	}
	return o.UseFactCache, true
}

// HasUseFactCache returns a boolean if a field has been set.
func (o *InlineObject46) HasUseFactCache() bool {
	if o != nil && o.UseFactCache != nil {
		return true
	}

	return false
}

// SetUseFactCache gets a reference to the given bool and assigns it to the UseFactCache field.
func (o *InlineObject46) SetUseFactCache(v bool) {
	o.UseFactCache = &v
}

// GetVerbosity returns the Verbosity field value if set, zero value otherwise.
func (o *InlineObject46) GetVerbosity() string {
	if o == nil || o.Verbosity == nil {
		var ret string
		return ret
	}
	return *o.Verbosity
}

// GetVerbosityOk returns a tuple with the Verbosity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetVerbosityOk() (*string, bool) {
	if o == nil || o.Verbosity == nil {
		return nil, false
	}
	return o.Verbosity, true
}

// HasVerbosity returns a boolean if a field has been set.
func (o *InlineObject46) HasVerbosity() bool {
	if o != nil && o.Verbosity != nil {
		return true
	}

	return false
}

// SetVerbosity gets a reference to the given string and assigns it to the Verbosity field.
func (o *InlineObject46) SetVerbosity(v string) {
	o.Verbosity = &v
}

// GetWebhookCredential returns the WebhookCredential field value if set, zero value otherwise.
func (o *InlineObject46) GetWebhookCredential() int32 {
	if o == nil || o.WebhookCredential == nil {
		var ret int32
		return ret
	}
	return *o.WebhookCredential
}

// GetWebhookCredentialOk returns a tuple with the WebhookCredential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetWebhookCredentialOk() (*int32, bool) {
	if o == nil || o.WebhookCredential == nil {
		return nil, false
	}
	return o.WebhookCredential, true
}

// HasWebhookCredential returns a boolean if a field has been set.
func (o *InlineObject46) HasWebhookCredential() bool {
	if o != nil && o.WebhookCredential != nil {
		return true
	}

	return false
}

// SetWebhookCredential gets a reference to the given int32 and assigns it to the WebhookCredential field.
func (o *InlineObject46) SetWebhookCredential(v int32) {
	o.WebhookCredential = &v
}

// GetWebhookService returns the WebhookService field value if set, zero value otherwise.
func (o *InlineObject46) GetWebhookService() string {
	if o == nil || o.WebhookService == nil {
		var ret string
		return ret
	}
	return *o.WebhookService
}

// GetWebhookServiceOk returns a tuple with the WebhookService field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject46) GetWebhookServiceOk() (*string, bool) {
	if o == nil || o.WebhookService == nil {
		return nil, false
	}
	return o.WebhookService, true
}

// HasWebhookService returns a boolean if a field has been set.
func (o *InlineObject46) HasWebhookService() bool {
	if o != nil && o.WebhookService != nil {
		return true
	}

	return false
}

// SetWebhookService gets a reference to the given string and assigns it to the WebhookService field.
func (o *InlineObject46) SetWebhookService(v string) {
	o.WebhookService = &v
}

func (o InlineObject46) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllowSimultaneous != nil {
		toSerialize["allow_simultaneous"] = o.AllowSimultaneous
	}
	if o.AskCredentialOnLaunch != nil {
		toSerialize["ask_credential_on_launch"] = o.AskCredentialOnLaunch
	}
	if o.AskDiffModeOnLaunch != nil {
		toSerialize["ask_diff_mode_on_launch"] = o.AskDiffModeOnLaunch
	}
	if o.AskInventoryOnLaunch != nil {
		toSerialize["ask_inventory_on_launch"] = o.AskInventoryOnLaunch
	}
	if o.AskJobTypeOnLaunch != nil {
		toSerialize["ask_job_type_on_launch"] = o.AskJobTypeOnLaunch
	}
	if o.AskLimitOnLaunch != nil {
		toSerialize["ask_limit_on_launch"] = o.AskLimitOnLaunch
	}
	if o.AskScmBranchOnLaunch != nil {
		toSerialize["ask_scm_branch_on_launch"] = o.AskScmBranchOnLaunch
	}
	if o.AskSkipTagsOnLaunch != nil {
		toSerialize["ask_skip_tags_on_launch"] = o.AskSkipTagsOnLaunch
	}
	if o.AskTagsOnLaunch != nil {
		toSerialize["ask_tags_on_launch"] = o.AskTagsOnLaunch
	}
	if o.AskVariablesOnLaunch != nil {
		toSerialize["ask_variables_on_launch"] = o.AskVariablesOnLaunch
	}
	if o.AskVerbosityOnLaunch != nil {
		toSerialize["ask_verbosity_on_launch"] = o.AskVerbosityOnLaunch
	}
	if o.BecomeEnabled != nil {
		toSerialize["become_enabled"] = o.BecomeEnabled
	}
	if o.CustomVirtualenv != nil {
		toSerialize["custom_virtualenv"] = o.CustomVirtualenv
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.DiffMode != nil {
		toSerialize["diff_mode"] = o.DiffMode
	}
	if o.ExtraVars != nil {
		toSerialize["extra_vars"] = o.ExtraVars
	}
	if o.ForceHandlers != nil {
		toSerialize["force_handlers"] = o.ForceHandlers
	}
	if o.Forks != nil {
		toSerialize["forks"] = o.Forks
	}
	if o.HostConfigKey != nil {
		toSerialize["host_config_key"] = o.HostConfigKey
	}
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.JobSliceCount != nil {
		toSerialize["job_slice_count"] = o.JobSliceCount
	}
	if o.JobTags != nil {
		toSerialize["job_tags"] = o.JobTags
	}
	if o.JobType != nil {
		toSerialize["job_type"] = o.JobType
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Playbook != nil {
		toSerialize["playbook"] = o.Playbook
	}
	if o.Project != nil {
		toSerialize["project"] = o.Project
	}
	if o.ScmBranch != nil {
		toSerialize["scm_branch"] = o.ScmBranch
	}
	if o.SkipTags != nil {
		toSerialize["skip_tags"] = o.SkipTags
	}
	if o.StartAtTask != nil {
		toSerialize["start_at_task"] = o.StartAtTask
	}
	if o.SurveyEnabled != nil {
		toSerialize["survey_enabled"] = o.SurveyEnabled
	}
	if o.Timeout != nil {
		toSerialize["timeout"] = o.Timeout
	}
	if o.UseFactCache != nil {
		toSerialize["use_fact_cache"] = o.UseFactCache
	}
	if o.Verbosity != nil {
		toSerialize["verbosity"] = o.Verbosity
	}
	if o.WebhookCredential != nil {
		toSerialize["webhook_credential"] = o.WebhookCredential
	}
	if o.WebhookService != nil {
		toSerialize["webhook_service"] = o.WebhookService
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject46 struct {
	value *InlineObject46
	isSet bool
}

func (v NullableInlineObject46) Get() *InlineObject46 {
	return v.value
}

func (v *NullableInlineObject46) Set(val *InlineObject46) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject46) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject46) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject46(val *InlineObject46) *NullableInlineObject46 {
	return &NullableInlineObject46{value: val, isSet: true}
}

func (v NullableInlineObject46) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject46) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


