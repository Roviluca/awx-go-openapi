/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject75 struct for InlineObject75
type InlineObject75 struct {
	// If enabled then the node will only run if all of the parent nodes have met the criteria to reach this node
	AllParentsMustConverge *bool `json:"all_parents_must_converge,omitempty"`
	// 
	DiffMode *bool `json:"diff_mode,omitempty"`
	// 
	ExtraData *string `json:"extra_data,omitempty"`
	// An identifier for this node that is unique within its workflow. It is copied to workflow job nodes corresponding to this node.
	Identifier *string `json:"identifier,omitempty"`
	// Inventory applied as a prompt, assuming job template prompts for inventory
	Inventory *int32 `json:"inventory,omitempty"`
	// 
	JobTags *string `json:"job_tags,omitempty"`
	// 
	JobType *string `json:"job_type,omitempty"`
	// 
	Limit *string `json:"limit,omitempty"`
	// 
	ScmBranch *string `json:"scm_branch,omitempty"`
	// 
	SkipTags *string `json:"skip_tags,omitempty"`
	// 
	UnifiedJobTemplate *int32 `json:"unified_job_template,omitempty"`
	// 
	Verbosity *string `json:"verbosity,omitempty"`
	// 
	WorkflowJobTemplate string `json:"workflow_job_template"`
}

// NewInlineObject75 instantiates a new InlineObject75 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject75(workflowJobTemplate string, ) *InlineObject75 {
	this := InlineObject75{}
	this.WorkflowJobTemplate = workflowJobTemplate
	return &this
}

// NewInlineObject75WithDefaults instantiates a new InlineObject75 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject75WithDefaults() *InlineObject75 {
	this := InlineObject75{}
	return &this
}

// GetAllParentsMustConverge returns the AllParentsMustConverge field value if set, zero value otherwise.
func (o *InlineObject75) GetAllParentsMustConverge() bool {
	if o == nil || o.AllParentsMustConverge == nil {
		var ret bool
		return ret
	}
	return *o.AllParentsMustConverge
}

// GetAllParentsMustConvergeOk returns a tuple with the AllParentsMustConverge field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetAllParentsMustConvergeOk() (*bool, bool) {
	if o == nil || o.AllParentsMustConverge == nil {
		return nil, false
	}
	return o.AllParentsMustConverge, true
}

// HasAllParentsMustConverge returns a boolean if a field has been set.
func (o *InlineObject75) HasAllParentsMustConverge() bool {
	if o != nil && o.AllParentsMustConverge != nil {
		return true
	}

	return false
}

// SetAllParentsMustConverge gets a reference to the given bool and assigns it to the AllParentsMustConverge field.
func (o *InlineObject75) SetAllParentsMustConverge(v bool) {
	o.AllParentsMustConverge = &v
}

// GetDiffMode returns the DiffMode field value if set, zero value otherwise.
func (o *InlineObject75) GetDiffMode() bool {
	if o == nil || o.DiffMode == nil {
		var ret bool
		return ret
	}
	return *o.DiffMode
}

// GetDiffModeOk returns a tuple with the DiffMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetDiffModeOk() (*bool, bool) {
	if o == nil || o.DiffMode == nil {
		return nil, false
	}
	return o.DiffMode, true
}

// HasDiffMode returns a boolean if a field has been set.
func (o *InlineObject75) HasDiffMode() bool {
	if o != nil && o.DiffMode != nil {
		return true
	}

	return false
}

// SetDiffMode gets a reference to the given bool and assigns it to the DiffMode field.
func (o *InlineObject75) SetDiffMode(v bool) {
	o.DiffMode = &v
}

// GetExtraData returns the ExtraData field value if set, zero value otherwise.
func (o *InlineObject75) GetExtraData() string {
	if o == nil || o.ExtraData == nil {
		var ret string
		return ret
	}
	return *o.ExtraData
}

// GetExtraDataOk returns a tuple with the ExtraData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetExtraDataOk() (*string, bool) {
	if o == nil || o.ExtraData == nil {
		return nil, false
	}
	return o.ExtraData, true
}

// HasExtraData returns a boolean if a field has been set.
func (o *InlineObject75) HasExtraData() bool {
	if o != nil && o.ExtraData != nil {
		return true
	}

	return false
}

// SetExtraData gets a reference to the given string and assigns it to the ExtraData field.
func (o *InlineObject75) SetExtraData(v string) {
	o.ExtraData = &v
}

// GetIdentifier returns the Identifier field value if set, zero value otherwise.
func (o *InlineObject75) GetIdentifier() string {
	if o == nil || o.Identifier == nil {
		var ret string
		return ret
	}
	return *o.Identifier
}

// GetIdentifierOk returns a tuple with the Identifier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetIdentifierOk() (*string, bool) {
	if o == nil || o.Identifier == nil {
		return nil, false
	}
	return o.Identifier, true
}

// HasIdentifier returns a boolean if a field has been set.
func (o *InlineObject75) HasIdentifier() bool {
	if o != nil && o.Identifier != nil {
		return true
	}

	return false
}

// SetIdentifier gets a reference to the given string and assigns it to the Identifier field.
func (o *InlineObject75) SetIdentifier(v string) {
	o.Identifier = &v
}

// GetInventory returns the Inventory field value if set, zero value otherwise.
func (o *InlineObject75) GetInventory() int32 {
	if o == nil || o.Inventory == nil {
		var ret int32
		return ret
	}
	return *o.Inventory
}

// GetInventoryOk returns a tuple with the Inventory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetInventoryOk() (*int32, bool) {
	if o == nil || o.Inventory == nil {
		return nil, false
	}
	return o.Inventory, true
}

// HasInventory returns a boolean if a field has been set.
func (o *InlineObject75) HasInventory() bool {
	if o != nil && o.Inventory != nil {
		return true
	}

	return false
}

// SetInventory gets a reference to the given int32 and assigns it to the Inventory field.
func (o *InlineObject75) SetInventory(v int32) {
	o.Inventory = &v
}

// GetJobTags returns the JobTags field value if set, zero value otherwise.
func (o *InlineObject75) GetJobTags() string {
	if o == nil || o.JobTags == nil {
		var ret string
		return ret
	}
	return *o.JobTags
}

// GetJobTagsOk returns a tuple with the JobTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetJobTagsOk() (*string, bool) {
	if o == nil || o.JobTags == nil {
		return nil, false
	}
	return o.JobTags, true
}

// HasJobTags returns a boolean if a field has been set.
func (o *InlineObject75) HasJobTags() bool {
	if o != nil && o.JobTags != nil {
		return true
	}

	return false
}

// SetJobTags gets a reference to the given string and assigns it to the JobTags field.
func (o *InlineObject75) SetJobTags(v string) {
	o.JobTags = &v
}

// GetJobType returns the JobType field value if set, zero value otherwise.
func (o *InlineObject75) GetJobType() string {
	if o == nil || o.JobType == nil {
		var ret string
		return ret
	}
	return *o.JobType
}

// GetJobTypeOk returns a tuple with the JobType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetJobTypeOk() (*string, bool) {
	if o == nil || o.JobType == nil {
		return nil, false
	}
	return o.JobType, true
}

// HasJobType returns a boolean if a field has been set.
func (o *InlineObject75) HasJobType() bool {
	if o != nil && o.JobType != nil {
		return true
	}

	return false
}

// SetJobType gets a reference to the given string and assigns it to the JobType field.
func (o *InlineObject75) SetJobType(v string) {
	o.JobType = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *InlineObject75) GetLimit() string {
	if o == nil || o.Limit == nil {
		var ret string
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetLimitOk() (*string, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *InlineObject75) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given string and assigns it to the Limit field.
func (o *InlineObject75) SetLimit(v string) {
	o.Limit = &v
}

// GetScmBranch returns the ScmBranch field value if set, zero value otherwise.
func (o *InlineObject75) GetScmBranch() string {
	if o == nil || o.ScmBranch == nil {
		var ret string
		return ret
	}
	return *o.ScmBranch
}

// GetScmBranchOk returns a tuple with the ScmBranch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetScmBranchOk() (*string, bool) {
	if o == nil || o.ScmBranch == nil {
		return nil, false
	}
	return o.ScmBranch, true
}

// HasScmBranch returns a boolean if a field has been set.
func (o *InlineObject75) HasScmBranch() bool {
	if o != nil && o.ScmBranch != nil {
		return true
	}

	return false
}

// SetScmBranch gets a reference to the given string and assigns it to the ScmBranch field.
func (o *InlineObject75) SetScmBranch(v string) {
	o.ScmBranch = &v
}

// GetSkipTags returns the SkipTags field value if set, zero value otherwise.
func (o *InlineObject75) GetSkipTags() string {
	if o == nil || o.SkipTags == nil {
		var ret string
		return ret
	}
	return *o.SkipTags
}

// GetSkipTagsOk returns a tuple with the SkipTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetSkipTagsOk() (*string, bool) {
	if o == nil || o.SkipTags == nil {
		return nil, false
	}
	return o.SkipTags, true
}

// HasSkipTags returns a boolean if a field has been set.
func (o *InlineObject75) HasSkipTags() bool {
	if o != nil && o.SkipTags != nil {
		return true
	}

	return false
}

// SetSkipTags gets a reference to the given string and assigns it to the SkipTags field.
func (o *InlineObject75) SetSkipTags(v string) {
	o.SkipTags = &v
}

// GetUnifiedJobTemplate returns the UnifiedJobTemplate field value if set, zero value otherwise.
func (o *InlineObject75) GetUnifiedJobTemplate() int32 {
	if o == nil || o.UnifiedJobTemplate == nil {
		var ret int32
		return ret
	}
	return *o.UnifiedJobTemplate
}

// GetUnifiedJobTemplateOk returns a tuple with the UnifiedJobTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetUnifiedJobTemplateOk() (*int32, bool) {
	if o == nil || o.UnifiedJobTemplate == nil {
		return nil, false
	}
	return o.UnifiedJobTemplate, true
}

// HasUnifiedJobTemplate returns a boolean if a field has been set.
func (o *InlineObject75) HasUnifiedJobTemplate() bool {
	if o != nil && o.UnifiedJobTemplate != nil {
		return true
	}

	return false
}

// SetUnifiedJobTemplate gets a reference to the given int32 and assigns it to the UnifiedJobTemplate field.
func (o *InlineObject75) SetUnifiedJobTemplate(v int32) {
	o.UnifiedJobTemplate = &v
}

// GetVerbosity returns the Verbosity field value if set, zero value otherwise.
func (o *InlineObject75) GetVerbosity() string {
	if o == nil || o.Verbosity == nil {
		var ret string
		return ret
	}
	return *o.Verbosity
}

// GetVerbosityOk returns a tuple with the Verbosity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetVerbosityOk() (*string, bool) {
	if o == nil || o.Verbosity == nil {
		return nil, false
	}
	return o.Verbosity, true
}

// HasVerbosity returns a boolean if a field has been set.
func (o *InlineObject75) HasVerbosity() bool {
	if o != nil && o.Verbosity != nil {
		return true
	}

	return false
}

// SetVerbosity gets a reference to the given string and assigns it to the Verbosity field.
func (o *InlineObject75) SetVerbosity(v string) {
	o.Verbosity = &v
}

// GetWorkflowJobTemplate returns the WorkflowJobTemplate field value
func (o *InlineObject75) GetWorkflowJobTemplate() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.WorkflowJobTemplate
}

// GetWorkflowJobTemplateOk returns a tuple with the WorkflowJobTemplate field value
// and a boolean to check if the value has been set.
func (o *InlineObject75) GetWorkflowJobTemplateOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.WorkflowJobTemplate, true
}

// SetWorkflowJobTemplate sets field value
func (o *InlineObject75) SetWorkflowJobTemplate(v string) {
	o.WorkflowJobTemplate = v
}

func (o InlineObject75) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AllParentsMustConverge != nil {
		toSerialize["all_parents_must_converge"] = o.AllParentsMustConverge
	}
	if o.DiffMode != nil {
		toSerialize["diff_mode"] = o.DiffMode
	}
	if o.ExtraData != nil {
		toSerialize["extra_data"] = o.ExtraData
	}
	if o.Identifier != nil {
		toSerialize["identifier"] = o.Identifier
	}
	if o.Inventory != nil {
		toSerialize["inventory"] = o.Inventory
	}
	if o.JobTags != nil {
		toSerialize["job_tags"] = o.JobTags
	}
	if o.JobType != nil {
		toSerialize["job_type"] = o.JobType
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.ScmBranch != nil {
		toSerialize["scm_branch"] = o.ScmBranch
	}
	if o.SkipTags != nil {
		toSerialize["skip_tags"] = o.SkipTags
	}
	if o.UnifiedJobTemplate != nil {
		toSerialize["unified_job_template"] = o.UnifiedJobTemplate
	}
	if o.Verbosity != nil {
		toSerialize["verbosity"] = o.Verbosity
	}
	if true {
		toSerialize["workflow_job_template"] = o.WorkflowJobTemplate
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject75 struct {
	value *InlineObject75
	isSet bool
}

func (v NullableInlineObject75) Get() *InlineObject75 {
	return v.value
}

func (v *NullableInlineObject75) Set(val *InlineObject75) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject75) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject75) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject75(val *InlineObject75) *NullableInlineObject75 {
	return &NullableInlineObject75{value: val, isSet: true}
}

func (v NullableInlineObject75) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject75) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


