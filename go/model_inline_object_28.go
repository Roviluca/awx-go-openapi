/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject28 struct for InlineObject28
type InlineObject28 struct {
	// Specify the type of credential you want to create. Refer to the Ansible Tower documentation for details on each type.
	CredentialType int32 `json:"credential_type"`
	// 
	Description *string `json:"description,omitempty"`
	// Enter inputs using either JSON or YAML syntax. Refer to the Ansible Tower documentation for example syntax.
	Inputs *map[string]interface{} `json:"inputs,omitempty"`
	// 
	Name string `json:"name"`
	// 
	Organization *int32 `json:"organization,omitempty"`
}

// NewInlineObject28 instantiates a new InlineObject28 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject28(credentialType int32, name string, ) *InlineObject28 {
	this := InlineObject28{}
	this.CredentialType = credentialType
	this.Name = name
	return &this
}

// NewInlineObject28WithDefaults instantiates a new InlineObject28 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject28WithDefaults() *InlineObject28 {
	this := InlineObject28{}
	return &this
}

// GetCredentialType returns the CredentialType field value
func (o *InlineObject28) GetCredentialType() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.CredentialType
}

// GetCredentialTypeOk returns a tuple with the CredentialType field value
// and a boolean to check if the value has been set.
func (o *InlineObject28) GetCredentialTypeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CredentialType, true
}

// SetCredentialType sets field value
func (o *InlineObject28) SetCredentialType(v int32) {
	o.CredentialType = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject28) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject28) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject28) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject28) SetDescription(v string) {
	o.Description = &v
}

// GetInputs returns the Inputs field value if set, zero value otherwise.
func (o *InlineObject28) GetInputs() map[string]interface{} {
	if o == nil || o.Inputs == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject28) GetInputsOk() (*map[string]interface{}, bool) {
	if o == nil || o.Inputs == nil {
		return nil, false
	}
	return o.Inputs, true
}

// HasInputs returns a boolean if a field has been set.
func (o *InlineObject28) HasInputs() bool {
	if o != nil && o.Inputs != nil {
		return true
	}

	return false
}

// SetInputs gets a reference to the given map[string]interface{} and assigns it to the Inputs field.
func (o *InlineObject28) SetInputs(v map[string]interface{}) {
	o.Inputs = &v
}

// GetName returns the Name field value
func (o *InlineObject28) GetName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InlineObject28) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InlineObject28) SetName(v string) {
	o.Name = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *InlineObject28) GetOrganization() int32 {
	if o == nil || o.Organization == nil {
		var ret int32
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject28) GetOrganizationOk() (*int32, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *InlineObject28) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given int32 and assigns it to the Organization field.
func (o *InlineObject28) SetOrganization(v int32) {
	o.Organization = &v
}

func (o InlineObject28) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["credential_type"] = o.CredentialType
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Inputs != nil {
		toSerialize["inputs"] = o.Inputs
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject28 struct {
	value *InlineObject28
	isSet bool
}

func (v NullableInlineObject28) Get() *InlineObject28 {
	return v.value
}

func (v *NullableInlineObject28) Set(val *InlineObject28) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject28) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject28) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject28(val *InlineObject28) *NullableInlineObject28 {
	return &NullableInlineObject28{value: val, isSet: true}
}

func (v NullableInlineObject28) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject28) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


