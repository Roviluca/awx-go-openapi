/*
 * Ansible Tower API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InlineObject1 struct for InlineObject1
type InlineObject1 struct {
	// 
	Description *string `json:"description,omitempty"`
	// 
	InputFieldName string `json:"input_field_name"`
	// 
	Metadata *map[string]interface{} `json:"metadata,omitempty"`
	// 
	SourceCredential int32 `json:"source_credential"`
	// 
	TargetCredential int32 `json:"target_credential"`
}

// NewInlineObject1 instantiates a new InlineObject1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineObject1(inputFieldName string, sourceCredential int32, targetCredential int32, ) *InlineObject1 {
	this := InlineObject1{}
	this.InputFieldName = inputFieldName
	this.SourceCredential = sourceCredential
	this.TargetCredential = targetCredential
	return &this
}

// NewInlineObject1WithDefaults instantiates a new InlineObject1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineObject1WithDefaults() *InlineObject1 {
	this := InlineObject1{}
	return &this
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InlineObject1) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InlineObject1) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InlineObject1) SetDescription(v string) {
	o.Description = &v
}

// GetInputFieldName returns the InputFieldName field value
func (o *InlineObject1) GetInputFieldName() string {
	if o == nil  {
		var ret string
		return ret
	}

	return o.InputFieldName
}

// GetInputFieldNameOk returns a tuple with the InputFieldName field value
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetInputFieldNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.InputFieldName, true
}

// SetInputFieldName sets field value
func (o *InlineObject1) SetInputFieldName(v string) {
	o.InputFieldName = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *InlineObject1) GetMetadata() map[string]interface{} {
	if o == nil || o.Metadata == nil {
		var ret map[string]interface{}
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetMetadataOk() (*map[string]interface{}, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *InlineObject1) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *InlineObject1) SetMetadata(v map[string]interface{}) {
	o.Metadata = &v
}

// GetSourceCredential returns the SourceCredential field value
func (o *InlineObject1) GetSourceCredential() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.SourceCredential
}

// GetSourceCredentialOk returns a tuple with the SourceCredential field value
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetSourceCredentialOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.SourceCredential, true
}

// SetSourceCredential sets field value
func (o *InlineObject1) SetSourceCredential(v int32) {
	o.SourceCredential = v
}

// GetTargetCredential returns the TargetCredential field value
func (o *InlineObject1) GetTargetCredential() int32 {
	if o == nil  {
		var ret int32
		return ret
	}

	return o.TargetCredential
}

// GetTargetCredentialOk returns a tuple with the TargetCredential field value
// and a boolean to check if the value has been set.
func (o *InlineObject1) GetTargetCredentialOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.TargetCredential, true
}

// SetTargetCredential sets field value
func (o *InlineObject1) SetTargetCredential(v int32) {
	o.TargetCredential = v
}

func (o InlineObject1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if true {
		toSerialize["input_field_name"] = o.InputFieldName
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if true {
		toSerialize["source_credential"] = o.SourceCredential
	}
	if true {
		toSerialize["target_credential"] = o.TargetCredential
	}
	return json.Marshal(toSerialize)
}

type NullableInlineObject1 struct {
	value *InlineObject1
	isSet bool
}

func (v NullableInlineObject1) Get() *InlineObject1 {
	return v.value
}

func (v *NullableInlineObject1) Set(val *InlineObject1) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineObject1) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineObject1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineObject1(val *InlineObject1) *NullableInlineObject1 {
	return &NullableInlineObject1{value: val, isSet: true}
}

func (v NullableInlineObject1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineObject1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


